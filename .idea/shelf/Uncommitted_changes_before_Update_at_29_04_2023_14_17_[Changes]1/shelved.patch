Index: app/src/main/java/com/infinity/dsmabsen/ui/viewModel/AktivitasViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.ui.viewModel\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.infinity.dsmabsen.model.*\r\nimport com.infinity.dsmabsen.repository.AktivitasRepository\r\nimport com.infinity.dsmabsen.repository.AttendanceRepository\r\nimport com.infinity.dsmabsen.repository.NetworkResult\r\nimport dagger.hilt.android.lifecycle.HiltViewModel\r\nimport kotlinx.coroutines.launch\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody\r\nimport xyz.teamgravity.checkinternet.CheckInternet\r\nimport javax.inject.Inject\r\n\r\n@HiltViewModel\r\nclass AktivitasViewModel @Inject constructor(private val repository: AktivitasRepository) :\r\n    ViewModel() {\r\n    private var _isDataLoaded = false\r\n\r\n    private val _aktivitas = MutableLiveData<NetworkResult<AktivitasResponse>>()\r\n    val aktivitasLiveData: LiveData<NetworkResult<AktivitasResponse>>\r\n        get() = _aktivitas\r\n\r\n    private val _sendAktivitas = MutableLiveData<NetworkResult<SendAktivitasResponse>>()\r\n    val sendAktivitasLiveData: LiveData<NetworkResult<SendAktivitasResponse>>\r\n        get() = _sendAktivitas\r\n\r\n\r\n    fun aktivitasRequest(\r\n        nip: String,\r\n    ) {\r\n        viewModelScope.launch {\r\n            if (!_isDataLoaded) {\r\n                val connected = CheckInternet().check()\r\n                if (connected) {\r\n                    _aktivitas.value = NetworkResult.Loading()\r\n                    _aktivitas.value = repository.listAktivitas(nip)\r\n                } else {\r\n                    _aktivitas.value = NetworkResult.Error(\"Tidak ada koneksi internet\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun sendAktivitasRequest(\r\n        nip: RequestBody,\r\n        nama: RequestBody,\r\n        koordinat: RequestBody,\r\n        file: MultipartBody.Part\r\n    ) {\r\n        viewModelScope.launch {\r\n            if (!_isDataLoaded) {\r\n                val connected = CheckInternet().check()\r\n                if (connected) {\r\n                    _sendAktivitas.value = NetworkResult.Loading()\r\n                    _sendAktivitas.value = repository.sendAktivitas(nip,nama,koordinat, file)\r\n                } else {\r\n                    _sendAktivitas.value = NetworkResult.Error(\"Tidak ada koneksi internet\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/ui/viewModel/AktivitasViewModel.kt b/app/src/main/java/com/infinity/dsmabsen/ui/viewModel/AktivitasViewModel.kt
--- a/app/src/main/java/com/infinity/dsmabsen/ui/viewModel/AktivitasViewModel.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/ui/viewModel/AktivitasViewModel.kt	
@@ -4,9 +4,9 @@
 import androidx.lifecycle.MutableLiveData
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
-import com.infinity.dsmabsen.model.*
+import com.infinity.dsmabsen.model.AktivitasResponse
+import com.infinity.dsmabsen.model.SendAktivitasResponse
 import com.infinity.dsmabsen.repository.AktivitasRepository
-import com.infinity.dsmabsen.repository.AttendanceRepository
 import com.infinity.dsmabsen.repository.NetworkResult
 import dagger.hilt.android.lifecycle.HiltViewModel
 import kotlinx.coroutines.launch
Index: app/src/main/java/com/infinity/dsmabsen/ui/fragment/DataAbsenFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.ui.fragment\r\n\r\nimport android.graphics.Color\r\nimport android.graphics.Typeface\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.navigation.fragment.findNavController\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.github.mikephil.charting.data.PieData\r\nimport com.github.mikephil.charting.data.PieDataSet\r\nimport com.github.mikephil.charting.data.PieEntry\r\nimport com.github.mikephil.charting.formatter.PercentFormatter\r\nimport com.github.mikephil.charting.formatter.ValueFormatter\r\nimport com.infinity.dsmabsen.R\r\nimport com.infinity.dsmabsen.adapter.AttendanceAdapter\r\nimport com.infinity.dsmabsen.databinding.FragmentDataAbsenBinding\r\nimport com.infinity.dsmabsen.helper.Constans\r\nimport com.infinity.dsmabsen.helper.Constans.IMAGE_URL\r\nimport com.infinity.dsmabsen.helper.TokenManager\r\nimport com.infinity.dsmabsen.helper.handleApiError\r\nimport com.infinity.dsmabsen.model.DataX\r\nimport com.infinity.dsmabsen.model.DataXX\r\nimport com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nimport com.infinity.dsmabsen.repository.NetworkResult\r\nimport com.infinity.dsmabsen.ui.viewModel.AttendanceViewModel\r\nimport com.infinity.dsmabsen.ui.viewModel.UserProfileViewModel\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport io.paperdb.Paper\r\nimport javax.inject.Inject\r\n\r\n@AndroidEntryPoint\r\nclass DataAbsenFragment :\r\n    BasesFragment<FragmentDataAbsenBinding>(FragmentDataAbsenBinding::inflate) {\r\n\r\n    private val viewModel: AttendanceViewModel by viewModels()\r\n\r\n    @Inject\r\n    lateinit var tokenManager: TokenManager\r\n    private val savedUser = Paper.book().read<DataX>(\"user\")\r\n    private val userProfileViewModel: UserProfileViewModel by viewModels()\r\n    private lateinit var adapter: AttendanceAdapter\r\n    private lateinit var recyclerView: RecyclerView\r\n    val nip = savedUser!!.nip\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        binding.apply {\r\n\r\n\r\n            userProfileViewModel.profileUserRequest(nip)\r\n            userProfileViewModel.profileUserLivedata.observe(viewLifecycleOwner) {\r\n                when (it) {\r\n                    is NetworkResult.Success -> {\r\n                        val response = it.data!!.data\r\n                        toolbarUser.namaUser.text = response.nama\r\n                        toolbarUser.jabatan.text = response.jabatan\r\n                        Glide.with(requireContext())\r\n                            .load(response.foto)\r\n                            .into(toolbarUser.imageUser)\r\n                    }\r\n\r\n                    is NetworkResult.Loading -> {\r\n                        loadingInclude.loading.visibility = View.VISIBLE\r\n                    }\r\n\r\n                    is NetworkResult.Error -> {\r\n                        handleApiError(it.message)\r\n                    }\r\n                }\r\n            }\r\n\r\n//            val savedUser = Paper.book().read<DataX>(\"user\")\r\n            viewModel.attendanceHistoryRequest2(nip)\r\n            viewModel.attendanceHistoryLiveData2.observe(viewLifecycleOwner) {\r\n                when (it) {\r\n                    is NetworkResult.Success -> {\r\n                        loadingInclude.loading.visibility = View.GONE\r\n                        scrollView.visibility = View.VISIBLE\r\n                        val attendance = it.data!!.data\r\n                        Log.d(\"data_absen\", attendance.toString())\r\n                        if (attendance.isEmpty()) {\r\n                            binding.recAttendance.visibility = View.GONE\r\n                            binding.imgNoData.visibility = View.VISIBLE\r\n                        } else {\r\n                            adapter =\r\n                                AttendanceAdapter(requireContext(), attendance) { data ->\r\n                                    val action =\r\n                                        DataAbsenFragmentDirections.actionDataAbsenFragmentToDetailDataAbsenFragment(\r\n                                            data\r\n                                        )\r\n                                    findNavController().navigate(action)\r\n                                }\r\n                            recyclerView = recAttendance\r\n                            recyclerView.adapter = adapter\r\n                            recyclerView.layoutManager = LinearLayoutManager(requireContext())\r\n                            recyclerView.setHasFixedSize(true)\r\n                            binding.recAttendance.visibility = View.VISIBLE\r\n                            binding.imgNoData.visibility = View.GONE\r\n                        }\r\n                    }\r\n\r\n                    is NetworkResult.Loading -> {\r\n                        loadingInclude.loading.visibility = View.VISIBLE\r\n                        scrollView.visibility = View.GONE\r\n                    }\r\n\r\n                    is NetworkResult.Error -> {\r\n                        loadingInclude.loading.visibility = View.GONE\r\n                        scrollView.visibility = View.VISIBLE\r\n                        Toast.makeText(requireContext(), \"Set Adabter Error\", Toast.LENGTH_SHORT)\r\n                        handleApiError(it.message)\r\n                    }\r\n                }\r\n            }\r\n\r\n            viewModel.attendanceTotalRequest(nip)\r\n            viewModel.totalAttendanceLiveData.observe(viewLifecycleOwner) {\r\n                when (it) {\r\n                    is NetworkResult.Success -> {\r\n                        loadingInclude.loading.visibility = View.GONE\r\n                        scrollView.visibility = View.VISIBLE\r\n                        val data = it.data!!.data\r\n//                        binding.imgNoData1.visibility = View.GONE\r\n                        binding.pieChart.visibility = View.VISIBLE\r\n                        if (data.masuk == 0 && data.izin == 0 && data.telat == 0 && data.alfa == 0) {\r\n                            binding.pieChart.visibility = View.GONE\r\n                            binding.imgNoData1.visibility = View.VISIBLE\r\n                        } else {\r\n                            binding.pieChart.visibility = View.VISIBLE\r\n                            binding.imgNoData1.visibility = View.VISIBLE\r\n                            setPieChart(data)\r\n                        }\r\n\r\n                    }\r\n\r\n                    is NetworkResult.Loading -> {\r\n                        loadingInclude.loading.visibility = View.VISIBLE\r\n                        scrollView.visibility = View.GONE\r\n                        binding.imgNoData1.visibility = View.GONE\r\n                        binding.pieChart.visibility = View.GONE\r\n                    }\r\n\r\n                    is NetworkResult.Error -> {\r\n                        loadingInclude.loading.visibility = View.GONE\r\n                        scrollView.visibility = View.VISIBLE\r\n                        binding.imgNoData1.visibility = View.VISIBLE\r\n                        binding.pieChart.visibility = View.GONE\r\n                        handleApiError(it.message)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun FragmentDataAbsenBinding.setPieChart(data: DataXX) {\r\n        val pieEntries = ArrayList<PieEntry>()\r\n        Log.d(\"data absen\", data.toString())\r\n        pieEntries.add(PieEntry(data.masuk.toFloat(), \"Masuk\"))\r\n        pieEntries.add(PieEntry(data.izin.toFloat(), \"Izin\"))\r\n        pieEntries.add(PieEntry(data.alfa.toFloat(), \"Alfa\"))\r\n        pieEntries.add(PieEntry(data.telat.toFloat(), \"Telat\"))\r\n\r\n        val colors = ArrayList<Int>()\r\n        colors.add(ContextCompat.getColor(requireContext(), R.color._success))\r\n        colors.add(ContextCompat.getColor(requireContext(), R.color._primary))\r\n        colors.add(ContextCompat.getColor(requireContext(), R.color._danger))\r\n        colors.add(ContextCompat.getColor(requireContext(), R.color._secondary))\r\n\r\n        val pieDataSet = PieDataSet(pieEntries, \"\")\r\n        pieDataSet.colors = colors\r\n        pieDataSet.sliceSpace = 1f\r\n        val boldTypeface = Typeface.defaultFromStyle(Typeface.BOLD)\r\n        pieDataSet.valueTypeface = boldTypeface\r\n\r\n        val pieData = PieData(pieDataSet)\r\n        pieData.setDrawValues(true)\r\n        pieData.setValueTextColor(Color.WHITE)\r\n        pieData.setValueFormatter(PercentFormatter())\r\n        pieData.setValueTextSize(14f)\r\n\r\n//        Atur deskripsi chart\r\n        pieChart.description.isEnabled = false\r\n        pieChart.setEntryLabelTextSize(134f)\r\n        pieChart.setExtraOffsets(5f, 10f, 5f, 5f)\r\n        pieChart.dragDecelerationFrictionCoef = 0.95f\r\n        pieChart.isDrawHoleEnabled = true\r\n        pieChart.setHoleColor(Color.WHITE)\r\n\r\n        // on below line we are setting circle color and alpha\r\n        pieChart.setTransparentCircleColor(Color.WHITE)\r\n        pieChart.setTransparentCircleAlpha(110)\r\n\r\n        // on  below line we are setting hole radius\r\n        pieChart.holeRadius = 58f\r\n        pieChart.transparentCircleRadius = 61f\r\n\r\n        // on below line we are setting center text\r\n        pieChart.setDrawCenterText(true)\r\n\r\n        pieChart.setDrawEntryLabels(false)\r\n\r\n        // Atur data yang akan ditampilkan pada chart\r\n        pieChart.data = pieData\r\n        pieChart.invalidate()\r\n\r\n        //             set value formatter\r\n        pieDataSet.valueFormatter = object : ValueFormatter() {\r\n            override fun getFormattedValue(value: Float): String {\r\n                return value.toInt().toString()\r\n            }\r\n        }\r\n    }\r\n//    override fun onConnectionAvailable() {\r\n//        super.onConnectionAvailable()\r\n//        binding.apply {\r\n//            toolbarUser.visibility = View.GONE\r\n//            rcycleview.visibility = View.VISIBLE\r\n//            noInternetConnection.ivNoConnection.visibility = View.GONE\r\n//        }\r\n//    }\r\n//\r\n//    override fun onConnectionLost() {\r\n//        super.onConnectionLost()\r\n//        binding.apply {\r\n//            toolbar.visibility = View.GONE\r\n//            rcycleview.visibility = View.GONE\r\n//            noInternetConnection.ivNoConnection.visibility = View.VISIBLE\r\n//        }\r\n//    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/DataAbsenFragment.kt b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/DataAbsenFragment.kt
--- a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/DataAbsenFragment.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/DataAbsenFragment.kt	
@@ -20,13 +20,10 @@
 import com.infinity.dsmabsen.R
 import com.infinity.dsmabsen.adapter.AttendanceAdapter
 import com.infinity.dsmabsen.databinding.FragmentDataAbsenBinding
-import com.infinity.dsmabsen.helper.Constans
-import com.infinity.dsmabsen.helper.Constans.IMAGE_URL
 import com.infinity.dsmabsen.helper.TokenManager
 import com.infinity.dsmabsen.helper.handleApiError
 import com.infinity.dsmabsen.model.DataX
 import com.infinity.dsmabsen.model.DataXX
-import com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXXXXXXXXXXXXX
 import com.infinity.dsmabsen.repository.NetworkResult
 import com.infinity.dsmabsen.ui.viewModel.AttendanceViewModel
 import com.infinity.dsmabsen.ui.viewModel.UserProfileViewModel
@@ -53,7 +50,6 @@
 
         binding.apply {
 
-
             userProfileViewModel.profileUserRequest(nip)
             userProfileViewModel.profileUserLivedata.observe(viewLifecycleOwner) {
                 when (it) {
@@ -134,10 +130,9 @@
                             binding.imgNoData1.visibility = View.VISIBLE
                         } else {
                             binding.pieChart.visibility = View.VISIBLE
-                            binding.imgNoData1.visibility = View.VISIBLE
+                            binding.imgNoData1.visibility = View.GONE
                             setPieChart(data)
                         }
-
                     }
 
                     is NetworkResult.Loading -> {
@@ -159,80 +154,64 @@
         }
     }
 
-    private fun FragmentDataAbsenBinding.setPieChart(data: DataXX) {
-        val pieEntries = ArrayList<PieEntry>()
-        Log.d("data absen", data.toString())
-        pieEntries.add(PieEntry(data.masuk.toFloat(), "Masuk"))
-        pieEntries.add(PieEntry(data.izin.toFloat(), "Izin"))
-        pieEntries.add(PieEntry(data.alfa.toFloat(), "Alfa"))
-        pieEntries.add(PieEntry(data.telat.toFloat(), "Telat"))
+    private fun setPieChart(data: DataXX) {
+        binding.apply {
+            val pieEntries = ArrayList<PieEntry>()
+            Log.d("data absen", data.toString())
+            pieEntries.add(PieEntry(data.masuk.toFloat(), "Masuk"))
+            pieEntries.add(PieEntry(data.izin.toFloat(), "Izin"))
+            pieEntries.add(PieEntry(data.alfa.toFloat(), "Alfa"))
+            pieEntries.add(PieEntry(data.telat.toFloat(), "Telat"))
 
-        val colors = ArrayList<Int>()
-        colors.add(ContextCompat.getColor(requireContext(), R.color._success))
-        colors.add(ContextCompat.getColor(requireContext(), R.color._primary))
-        colors.add(ContextCompat.getColor(requireContext(), R.color._danger))
-        colors.add(ContextCompat.getColor(requireContext(), R.color._secondary))
+            val colors = ArrayList<Int>()
+            colors.add(ContextCompat.getColor(requireContext(), R.color._success))
+            colors.add(ContextCompat.getColor(requireContext(), R.color._primary))
+            colors.add(ContextCompat.getColor(requireContext(), R.color._danger))
+            colors.add(ContextCompat.getColor(requireContext(), R.color._secondary))
 
-        val pieDataSet = PieDataSet(pieEntries, "")
-        pieDataSet.colors = colors
-        pieDataSet.sliceSpace = 1f
-        val boldTypeface = Typeface.defaultFromStyle(Typeface.BOLD)
-        pieDataSet.valueTypeface = boldTypeface
+            val pieDataSet = PieDataSet(pieEntries, "")
+            pieDataSet.colors = colors
+            pieDataSet.sliceSpace = 1f
+            val boldTypeface = Typeface.defaultFromStyle(Typeface.BOLD)
+            pieDataSet.valueTypeface = boldTypeface
 
-        val pieData = PieData(pieDataSet)
-        pieData.setDrawValues(true)
-        pieData.setValueTextColor(Color.WHITE)
-        pieData.setValueFormatter(PercentFormatter())
-        pieData.setValueTextSize(14f)
+            val pieData = PieData(pieDataSet)
+            pieData.setDrawValues(true)
+            pieData.setValueTextColor(Color.WHITE)
+            pieData.setValueFormatter(PercentFormatter())
+            pieData.setValueTextSize(14f)
 
 //        Atur deskripsi chart
-        pieChart.description.isEnabled = false
-        pieChart.setEntryLabelTextSize(134f)
-        pieChart.setExtraOffsets(5f, 10f, 5f, 5f)
-        pieChart.dragDecelerationFrictionCoef = 0.95f
-        pieChart.isDrawHoleEnabled = true
-        pieChart.setHoleColor(Color.WHITE)
+            pieChart.description.isEnabled = false
+            pieChart.setEntryLabelTextSize(134f)
+            pieChart.setExtraOffsets(5f, 10f, 5f, 5f)
+            pieChart.dragDecelerationFrictionCoef = 0.95f
+            pieChart.isDrawHoleEnabled = true
+            pieChart.setHoleColor(Color.WHITE)
 
-        // on below line we are setting circle color and alpha
-        pieChart.setTransparentCircleColor(Color.WHITE)
-        pieChart.setTransparentCircleAlpha(110)
+            // on below line we are setting circle color and alpha
+            pieChart.setTransparentCircleColor(Color.WHITE)
+            pieChart.setTransparentCircleAlpha(110)
 
-        // on  below line we are setting hole radius
-        pieChart.holeRadius = 58f
-        pieChart.transparentCircleRadius = 61f
+            // on  below line we are setting hole radius
+            pieChart.holeRadius = 58f
+            pieChart.transparentCircleRadius = 61f
 
-        // on below line we are setting center text
-        pieChart.setDrawCenterText(true)
+            // on below line we are setting center text
+            pieChart.setDrawCenterText(true)
 
-        pieChart.setDrawEntryLabels(false)
+            pieChart.setDrawEntryLabels(false)
 
-        // Atur data yang akan ditampilkan pada chart
-        pieChart.data = pieData
-        pieChart.invalidate()
+            // Atur data yang akan ditampilkan pada chart
+            pieChart.data = pieData
+            pieChart.invalidate()
 
-        //             set value formatter
-        pieDataSet.valueFormatter = object : ValueFormatter() {
-            override fun getFormattedValue(value: Float): String {
-                return value.toInt().toString()
+            //             set value formatter
+            pieDataSet.valueFormatter = object : ValueFormatter() {
+                override fun getFormattedValue(value: Float): String {
+                    return value.toInt().toString()
+                }
             }
         }
     }
-//    override fun onConnectionAvailable() {
-//        super.onConnectionAvailable()
-//        binding.apply {
-//            toolbarUser.visibility = View.GONE
-//            rcycleview.visibility = View.VISIBLE
-//            noInternetConnection.ivNoConnection.visibility = View.GONE
-//        }
-//    }
-//
-//    override fun onConnectionLost() {
-//        super.onConnectionLost()
-//        binding.apply {
-//            toolbar.visibility = View.GONE
-//            rcycleview.visibility = View.GONE
-//            noInternetConnection.ivNoConnection.visibility = View.VISIBLE
-//        }
-//    }
-
 }
\ No newline at end of file
Index: app/src/main/java/com/infinity/dsmabsen/model/DataXXXXXXXXXXXXXXXXXXXXXXXXX.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.model\r\n\r\ndata class DataXXXXXXXXXXXXXXXXXXXXXXXXX(\r\n    val messages: String,\r\n    val status: Boolean\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/model/DataXXXXXXXXXXXXXXXXXXXXXXXXX.kt b/app/src/main/java/com/infinity/dsmabsen/model/DataXXXXXXXXXXXXXXXXXXXXXXXXX.kt
--- a/app/src/main/java/com/infinity/dsmabsen/model/DataXXXXXXXXXXXXXXXXXXXXXXXXX.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/model/DataXXXXXXXXXXXXXXXXXXXXXXXXX.kt	
@@ -1,6 +1,6 @@
 package com.infinity.dsmabsen.model
 
 data class DataXXXXXXXXXXXXXXXXXXXXXXXXX(
-    val messages: String,
-    val status: Boolean
+    val messages: String?,
+    val status: Boolean?
 )
\ No newline at end of file
Index: app/src/main/res/layout/fragment_sallary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\".ui.fragment.SallaryFragment\"\r\n    android:background=\"@drawable/gradiend_background\">\r\n\r\n    <include\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:id=\"@+id/toolbar\"\r\n        layout=\"@layout/toolbar_layout\"/>\r\n    <ImageView\r\n        android:visibility=\"gone\"\r\n        android:id=\"@+id/img_no_data\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:padding=\"@dimen/_20sdp\"\r\n        android:src=\"@drawable/no_data_found\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/toolbar\"\r\n        />\r\n    <include\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:id=\"@+id/loadingInclude\"\r\n        layout=\"@layout/loading\" />\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recSallary\"\r\n        tools:listitem=\"@layout/item_sallary\"\r\n        android:layout_marginTop=\"@dimen/_15sdp\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:paddingHorizontal=\"@dimen/_20sdp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/toolbar\" />\r\n\r\n    <include\r\n        android:id=\"@+id/noInternetConnection\"\r\n        layout=\"@layout/fake\"\r\n        />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_sallary.xml b/app/src/main/res/layout/fragment_sallary.xml
--- a/app/src/main/res/layout/fragment_sallary.xml	
+++ b/app/src/main/res/layout/fragment_sallary.xml	
@@ -40,6 +40,7 @@
         app:layout_constraintTop_toBottomOf="@+id/toolbar" />
 
     <include
+        android:visibility="gone"
         android:id="@+id/noInternetConnection"
         layout="@layout/fake"
         />
Index: app/src/main/res/layout/fragment_pengajuan_shift.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    android:background=\"@drawable/gradiend_background\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\".ui.fragment.PengajuanShiftFragment\">\r\n\r\n    <include\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:id=\"@+id/toolbar\"\r\n        layout=\"@layout/toolbar_layout\"/>\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/scrollView2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:paddingHorizontal=\"@dimen/_10sdp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/toolbar\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/rv_pilih_shift\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@drawable/rounded_menu\"\r\n                android:paddingHorizontal=\"@dimen/_15sdp\"\r\n                android:paddingVertical=\"@dimen/_10sdp\"\r\n                app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tv_pilih_shift\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/poppins_bold\"\r\n                    android:text=\"Pilih Izin\"\r\n                    android:textColor=\"@color/black_text\"\r\n                    android:textSize=\"@dimen/_11ssp\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/spinner_shift\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_47sdp\"\r\n                    android:layout_below=\"@+id/tv_pilih_shift\"\r\n                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                    android:background=\"@drawable/rounded_menu\"\r\n                    android:backgroundTint=\"@color/white\"\r\n                    android:textAlignment=\"textEnd\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/tv_pilih_shift\" />\r\n\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/rv_keterangan_perizinan_create\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"@dimen/_10sdp\"\r\n                android:background=\"@drawable/rounded_menu\"\r\n                android:paddingHorizontal=\"@dimen/_15sdp\"\r\n                android:paddingVertical=\"@dimen/_10sdp\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/rv_pilih_shift\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tv_keterangan_perizinan_create\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/poppins_bold\"\r\n                    android:text=\"Keterangan\"\r\n                    android:textColor=\"@color/black_text\"\r\n                    android:textSize=\"@dimen/_11ssp\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                <EditText\r\n                    android:id=\"@+id/edtKeterangan\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_109sdp\"\r\n                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                    android:background=\"@drawable/rounded_menu\"\r\n                    android:backgroundTint=\"@color/white\"\r\n                    android:gravity=\"top|start\"\r\n                    android:imeOptions=\"actionGo\"\r\n                    android:lines=\"4\"\r\n                    android:paddingHorizontal=\"@dimen/_10sdp\"\r\n                    android:paddingVertical=\"@dimen/_15sdp\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/tv_keterangan_perizinan_create\" />\r\n\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n    </ScrollView>\r\n\r\n    <include\r\n        android:visibility=\"gone\"\r\n        android:id=\"@+id/noInternetConnection\"\r\n        layout=\"@layout/fake\"\r\n        />\r\n    <include\r\n        android:id=\"@+id/loading_include\"\r\n        layout=\"@layout/loading\"\r\n        />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_pengajuan_shift.xml b/app/src/main/res/layout/fragment_pengajuan_shift.xml
--- a/app/src/main/res/layout/fragment_pengajuan_shift.xml	
+++ b/app/src/main/res/layout/fragment_pengajuan_shift.xml	
@@ -94,6 +94,33 @@
                     android:paddingVertical="@dimen/_15sdp"
                     app:layout_constraintTop_toBottomOf="@+id/tv_keterangan_perizinan_create" />
 
+                <LinearLayout
+                    android:gravity="center_horizontal"
+                    android:id="@+id/linearView"
+                    app:layout_constraintTop_toBottomOf="@+id/edtKeterangan"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="horizontal">
+                    <TextView
+                        android:id="@+id/tv_jam"
+                        android:textColor="@color/_dark"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        />
+                    <TextView
+                        android:id="@+id/tv_menit"
+                        android:textColor="@color/_dark"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        />
+                    <TextView
+                        android:id="@+id/tv_detik"
+                        android:textColor="@color/_dark"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        />
+
+                </LinearLayout>
             </androidx.constraintlayout.widget.ConstraintLayout>
         </androidx.constraintlayout.widget.ConstraintLayout>
     </ScrollView>
Index: app/src/main/res/navigation/main_nav.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main_nav\"\r\n    app:startDestination=\"@id/berandaFragment\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/berandaFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.BerandaFragment\"\r\n        tools:layout=\"@layout/fragment_beranda\">\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_scanFragment\"\r\n            app:destination=\"@id/scanFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_dataAbsenFragment\"\r\n            app:destination=\"@id/dataAbsenFragment\"\r\n            app:enterAnim=\"@anim/slide_in_right\"\r\n            app:exitAnim=\"@anim/slide_out_left\"\r\n            app:popEnterAnim=\"@anim/slide_in_left\"\r\n            app:popExitAnim=\"@anim/slide_out_right\"\r\n            app:popUpToInclusive=\"false\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_attendanceFragment\"\r\n            app:destination=\"@id/attendanceFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"\r\n            app:popUpToInclusive=\"false\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_allMenuFragment\"\r\n            app:destination=\"@id/allMenuFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_sallaryFragment\"\r\n            app:destination=\"@id/sallaryFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_reimbursementFragment\"\r\n            app:destination=\"@id/reimbursementFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_menuPerizinanFragment\"\r\n            app:destination=\"@id/menuPerizinanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_lemburFragment\"\r\n            app:destination=\"@id/lemburFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_shiftFragment\"\r\n            app:destination=\"@id/shiftFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_pengumumanFragment\"\r\n            app:destination=\"@id/pengumumanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_berandaFragment_to_ubahPasswordFragment\"\r\n            app:destination=\"@id/ubahPasswordFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/scanFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.ScanFragment\"\r\n        tools:layout=\"@layout/fragment_scan\">\r\n        <action\r\n            android:id=\"@+id/action_scanFragment_to_berandaFragment\"\r\n            app:destination=\"@id/berandaFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_scanFragment_to_berandaFragment2\"\r\n            app:destination=\"@id/berandaFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_scanFragment_to_reimbursementFragment\"\r\n            app:destination=\"@id/reimbursementFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_scanFragment_to_pengajuanReimbursementFragment\"\r\n            app:destination=\"@id/pengajuanReimbursementFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_scanFragment_to_visitFragment2\"\r\n            app:destination=\"@id/visitFragment2\" />\r\n        <action\r\n            android:id=\"@+id/action_scanFragment_to_penganjuanVisitFragment\"\r\n            app:destination=\"@id/penganjuanVisitFragment\"\r\n            app:popUpTo=\"@id/scanFragment\"\r\n            app:popUpToInclusive=\"true\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/dataAbsenFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DataAbsenFragment\"\r\n        tools:layout=\"@layout/fragment_data_absen\">\r\n        <action\r\n            android:id=\"@+id/action_dataAbsenFragment_to_berandaFragment\"\r\n            app:destination=\"@id/berandaFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_dataAbsenFragment_to_profileFragment\"\r\n            app:destination=\"@id/profileFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_dataAbsenFragment_to_detailDataAbsenFragment\"\r\n            app:destination=\"@id/detailDataAbsenFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/profileFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.ProfileFragment\"\r\n        tools:layout=\"@layout/fragment_profile\">\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_berandaFragment\"\r\n            app:destination=\"@id/berandaFragment\"\r\n            app:popUpToInclusive=\"false\" />\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_dataAbsenFragment\"\r\n            app:destination=\"@id/dataAbsenFragment\"\r\n            app:popUpToInclusive=\"false\" />\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_allProfileFragment\"\r\n            app:destination=\"@id/allProfileFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"\r\n            app:popUpToInclusive=\"false\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/noInternetConnection\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.NoInternetConnection\"\r\n        android:label=\"fragment_no_internet_connection\"\r\n        tools:layout=\"@layout/fragment_no_internet_connection\" />\r\n    <fragment\r\n        android:id=\"@+id/attendanceFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.AttendanceFragment\"\r\n        tools:layout=\"@layout/fragment_attendance\">\r\n        <action\r\n            android:id=\"@+id/action_attendanceFragment_to_berandaFragment\"\r\n            app:destination=\"@id/berandaFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_attendanceFragment_to_profileFragment\"\r\n            app:destination=\"@id/profileFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_attendanceFragment_to_scanWajahFragment\"\r\n            app:destination=\"@id/scanWajahFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_attendanceFragment_to_faceScanningFragment3\"\r\n            app:destination=\"@id/faceScanningFragment\" />\r\n        <argument\r\n            android:name=\"hasilScan\"\r\n            android:defaultValue=\"belumScan\"\r\n            app:argType=\"string\" />\r\n        <!--        <argument-->\r\n        <!--            android:name=\"hasilScan\"-->\r\n        <!--            app:argType=\"string\"-->\r\n        <!--            android:defaultValue=\"hasilScan\" />-->\r\n\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/allMenuFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.AllMenuFragment\"\r\n        tools:layout=\"@layout/fragment_all_menu\">\r\n        <action\r\n            android:id=\"@+id/action_allMenuFragment_to_berandaFragment\"\r\n            app:destination=\"@id/berandaFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n        <action\r\n            android:id=\"@+id/action_allMenuFragment_to_reimbursementFragment\"\r\n            app:destination=\"@id/reimbursementFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_allMenuFragment_to_shiftFragment\"\r\n            app:destination=\"@id/shiftFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_allMenuFragment_to_lemburFragment\"\r\n            app:destination=\"@id/lemburFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_allMenuFragment_to_sallaryFragment\"\r\n            app:destination=\"@id/sallaryFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_allMenuFragment_to_menuPerizinanFragment\"\r\n            app:destination=\"@id/menuPerizinanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_allMenuFragment_to_pengumumanFragment\"\r\n            app:destination=\"@id/pengumumanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_allMenuFragment_to_aktivitasFragment\"\r\n            app:destination=\"@id/aktivitasFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/allProfileFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.AllProfileFragment\"\r\n        tools:layout=\"@layout/fragment_all_profile\">\r\n        <action\r\n            android:id=\"@+id/action_allProfileFragment_to_personalDataFragment\"\r\n            app:destination=\"@id/personalDataFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_allProfileFragment_to_jabatanDanPosisiFragment\"\r\n            app:destination=\"@id/jabatanDanPosisiFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n        <action\r\n            android:id=\"@+id/action_allProfileFragment_to_lokasiKerjaFragment\"\r\n            app:destination=\"@id/lokasiKerjaFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n        <action\r\n            android:id=\"@+id/action_allProfileFragment_to_pengalamanKerjaFragment\"\r\n            app:destination=\"@id/pengalamanKerjaFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n        <action\r\n            android:id=\"@+id/action_allProfileFragment_to_penguasaanBahasaFragment\"\r\n            app:destination=\"@id/penguasaanBahasaFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n        <action\r\n            android:id=\"@+id/action_allProfileFragment_to_pendidikanFragment\"\r\n            app:destination=\"@id/pendidikanFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/editProfileFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.EditProfileFragment\"\r\n        tools:layout=\"@layout/fragment_edit_profile\">\r\n        <argument\r\n            android:name=\"dataProfile\"\r\n            android:defaultValue=\"data\"\r\n            app:argType=\"string\" />\r\n        <argument\r\n            android:name=\"valueProfile\"\r\n            android:defaultValue=\"value\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_editProfileFragment_to_personalDataFragment\"\r\n            app:destination=\"@id/personalDataFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\"\r\n            app:popUpTo=\"@id/personalDataFragment\"\r\n            app:popUpToInclusive=\"true\" />\r\n        <argument\r\n            android:name=\"txtProfile\"\r\n            android:defaultValue=\"nip\"\r\n            app:argType=\"string\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/personalDataFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PersonalDataFragment\"\r\n        tools:layout=\"@layout/fragment_personal_data\">\r\n        <action\r\n            android:id=\"@+id/action_personalDataFragment_to_editProfileFragment\"\r\n            app:destination=\"@id/editProfileFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/sallaryFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.SallaryFragment\"\r\n        tools:layout=\"@layout/fragment_sallary\">\r\n        <action\r\n            android:id=\"@+id/action_sallaryFragment_to_detailGajiFragment\"\r\n            app:destination=\"@id/detailGajiFragment\"\r\n            app:enterAnim=\"@anim/slide_in_right\"\r\n            app:exitAnim=\"@anim/slide_out_left\"\r\n            app:popEnterAnim=\"@anim/slide_in_left\"\r\n            app:popExitAnim=\"@anim/slide_out_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/reimbursementFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.ReimbursementFragment\"\r\n        tools:layout=\"@layout/fragment_reimbursement\">\r\n        <action\r\n            android:id=\"@+id/action_reimbursementFragment_to_pengajuanReimbursementFragment\"\r\n            app:destination=\"@id/pengajuanReimbursementFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_reimbursementFragment_to_scanFragment\"\r\n            app:destination=\"@id/scanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_reimbursementFragment_to_detailReimbursementFragment\"\r\n            app:destination=\"@id/detailReimbursementFragment\"\r\n            app:enterAnim=\"@anim/slide_in_right\"\r\n            app:exitAnim=\"@anim/slide_out_left\"\r\n            app:popEnterAnim=\"@anim/slide_in_left\"\r\n            app:popExitAnim=\"@anim/slide_out_right\" />\r\n        <!--        <argument-->\r\n        <!--            android:name=\"BarcodeCode\"-->\r\n        <!--            app:argType=\"string\" />-->\r\n\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/splashScreenFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.SplashScreenFragment\"\r\n        android:label=\"fragment_splash_screen\"\r\n        tools:layout=\"@layout/fragment_splash_screen\" />\r\n    <fragment\r\n        android:id=\"@+id/formPerizinanFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.FormPerizinanFragment\"\r\n        tools:layout=\"@layout/fragment_form_perizinan\">\r\n        <action\r\n            android:id=\"@+id/action_formPerizinanFragment_to_menuPerizinanFragment\"\r\n            app:destination=\"@id/menuPerizinanFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/menuPerizinanFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.MenuPerizinanFragment\"\r\n        tools:layout=\"@layout/fragment_perizinan\">\r\n        <action\r\n            android:id=\"@+id/action_menuPerizinanFragment_to_formPerizinanFragment\"\r\n            app:destination=\"@id/formPerizinanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_menuPerizinanFragment_to_detailPerizinanFragment\"\r\n            app:destination=\"@id/detailPerizinanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/lemburFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.LemburFragment\"\r\n        tools:layout=\"@layout/fragment_lembur\">\r\n        <action\r\n            android:id=\"@+id/action_lemburFragment_to_berandaFragment\"\r\n            app:destination=\"@id/berandaFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n        <action\r\n            android:id=\"@+id/action_lemburFragment_to_pengajuanLemburFragment\"\r\n            app:destination=\"@id/pengajuanLemburFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_lemburFragment_to_detailLemburFragment\"\r\n            app:destination=\"@id/detailLemburFragment\"\r\n            app:enterAnim=\"@anim/slide_in_right\"\r\n            app:exitAnim=\"@anim/slide_out_left\"\r\n            app:popEnterAnim=\"@anim/slide_in_left\"\r\n            app:popExitAnim=\"@anim/slide_out_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/pengajuanLemburFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PengajuanLemburFragment\"\r\n        tools:layout=\"@layout/fragment_pengajuan_lembur\" />\r\n    <fragment\r\n        android:id=\"@+id/shiftFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.ShiftFragment\"\r\n        tools:layout=\"@layout/fragment_shift\">\r\n        <action\r\n            android:id=\"@+id/action_shiftFragment_to_pengajuanShiftFragment\"\r\n            app:destination=\"@id/pengajuanShiftFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_shiftFragment_to_detailShiftFragment\"\r\n            app:destination=\"@id/detailShiftFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/pengajuanReimbursementFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PengajuanReimbursementFragment\"\r\n        tools:layout=\"@layout/fragment_pengajuan_reimbursement\">\r\n        <action\r\n            android:id=\"@+id/action_pengajuanReimbursementFragment_to_scanFragment\"\r\n            app:destination=\"@id/scanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/pengajuanShiftFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PengajuanShiftFragment\"\r\n        tools:layout=\"@layout/fragment_pengajuan_shift\" />\r\n    <fragment\r\n        android:id=\"@+id/detailGajiFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailGajiFragment\">\r\n        <argument\r\n            android:name=\"detailGaji\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXX\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/pengumumanFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PengumumanFragment\"\r\n        tools:layout=\"@layout/fragment_pengumuman\">\r\n        <action\r\n            android:id=\"@+id/action_pengumumanFragment_to_detailPengumumanFragment\"\r\n            app:destination=\"@id/detailPengumumanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/visitFragment2\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.VisitFragment\"\r\n        tools:layout=\"@layout/fragment_visit\">\r\n        <action\r\n            android:id=\"@+id/action_visitFragment2_to_penganjuanVisitFragment\"\r\n            app:destination=\"@id/penganjuanVisitFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_visitFragment2_to_scanFragment\"\r\n            app:destination=\"@id/scanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_visitFragment2_to_detailVisitFragment\"\r\n            app:destination=\"@id/detailVisitFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/penganjuanVisitFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PenganjuanVisitFragment\"\r\n        tools:layout=\"@layout/fragment_penganjuan_visit\">\r\n        <action\r\n            android:id=\"@+id/action_penganjuanVisitFragment_to_scanFragment\"\r\n            app:destination=\"@id/scanFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <argument\r\n            android:name=\"barcodes\"\r\n            android:defaultValue=\"Notifications\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_penganjuanVisitFragment_to_visitFragment2\"\r\n            app:destination=\"@id/visitFragment2\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/jabatanDanPosisiFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.JabatanDanPosisiFragment\"\r\n        tools:layout=\"@layout/fragment_jabatan_dan_posisi\" />\r\n    <fragment\r\n        android:id=\"@+id/lokasiKerjaFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.LokasiKerjaFragment\"\r\n        tools:layout=\"@layout/fragment_lokasi_kerja\" />\r\n    <fragment\r\n        android:id=\"@+id/pengalamanKerjaFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PengalamanKerjaFragment\"\r\n        tools:layout=\"@layout/fragment_pengalaman_kerja\" />\r\n    <fragment\r\n        android:id=\"@+id/penguasaanBahasaFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PenguasaanBahasaFragment\"\r\n        tools:layout=\"@layout/fragment_penguasaan_bahasa\" />\r\n    <fragment\r\n        android:id=\"@+id/pendidikanFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PendidikanFragment\"\r\n        tools:layout=\"@layout/fragment_pendidikan\" />\r\n    <fragment\r\n        android:id=\"@+id/scanWajahFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.ScanWajahFragment\"\r\n        tools:layout=\"@layout/fragment_scan_wajah\">\r\n        <action\r\n            android:id=\"@+id/action_scanWajahFragment_to_attendanceFragment\"\r\n            app:destination=\"@id/attendanceFragment\"\r\n            app:enterAnim=\"@anim/from_left\"\r\n            app:exitAnim=\"@anim/to_right\"\r\n            app:popEnterAnim=\"@anim/from_right\"\r\n            app:popExitAnim=\"@anim/to_left\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/faceScanningFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.FaceScanningFragment\"\r\n        tools:layout=\"@layout/fragment_face_scanning\">\r\n        <action\r\n            android:id=\"@+id/faceScanning_to_attendance\"\r\n            app:destination=\"@id/attendanceFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/aktivitasFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.AktivitasFragment\"\r\n        tools:layout=\"@layout/fragment_aktivitas\">\r\n        <action\r\n            android:id=\"@+id/action_aktivitasFragment_to_detailAktivitasFragment\"\r\n            app:destination=\"@id/detailAktivitasFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <action\r\n            android:id=\"@+id/action_aktivitasFragment_to_pengajuanAktivitasFragment\"\r\n            app:destination=\"@id/pengajuanAktivitasFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/detailAktivitasFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailAktivitasFragment\"\r\n        tools:layout=\"@layout/fragment_detail_aktivitas\">\r\n        <argument\r\n            android:name=\"detailAktivitas\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/pengajuanAktivitasFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.PengajuanAktivitasFragment\"\r\n        android:label=\"fragment_pengajuan_aktivitas\"\r\n        tools:layout=\"@layout/fragment_pengajuan_aktivitas\" />\r\n    <fragment\r\n        android:id=\"@+id/detailReimbursementFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailReimbursementFragment\"\r\n        tools:layout=\"@layout/fragment_detail_reimbursement\">\r\n        <argument\r\n            android:name=\"detailReimbursement\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXX\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/detailDataAbsenFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailDataAbsenFragment\"\r\n        android:label=\"fragment_detail_data_absen\"\r\n        tools:layout=\"@layout/fragment_detail_data_absen\">\r\n        <argument\r\n            android:name=\"dataAbsen\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXXXXXXXXXXXXX\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/detailLemburFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailLemburFragment\"\r\n        android:label=\"fragment_detail_lembur\"\r\n        tools:layout=\"@layout/fragment_detail_lembur\">\r\n        <argument\r\n            android:name=\"dataLembur\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXXXX\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/detailPerizinanFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailPerizinanFragment\"\r\n        tools:layout=\"@layout/fragment_detail_perizinan\">\r\n        <argument\r\n            android:name=\"detailPerizinan\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXXXXXXX\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/detailShiftFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailShiftFragment\"\r\n        android:label=\"fragment_detail_shift\"\r\n        tools:layout=\"@layout/fragment_detail_shift\">\r\n        <argument\r\n            android:name=\"detailShift\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXXXXXXXXX\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/detailVisitFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailVisitFragment\"\r\n        android:label=\"fragment_detail_visit\"\r\n        tools:layout=\"@layout/fragment_detail_visit\">\r\n        <argument\r\n            android:name=\"detailVisit\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/ubahPasswordFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.UbahPasswordFragment\"\r\n        android:label=\"fragment_ubah_password\"\r\n        tools:layout=\"@layout/fragment_ubah_password\" />\r\n    <fragment\r\n        android:id=\"@+id/detailPengumumanFragment\"\r\n        android:name=\"com.infinity.dsmabsen.ui.fragment.DetailPengumumanFragment\"\r\n        android:label=\"fragment_detail_pengumuman\"\r\n        tools:layout=\"@layout/fragment_detail_pengumuman\">\r\n        <argument\r\n            android:name=\"detailPengumuman\"\r\n            app:argType=\"com.infinity.dsmabsen.model.DataXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" />\r\n    </fragment>\r\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/main_nav.xml b/app/src/main/res/navigation/main_nav.xml
--- a/app/src/main/res/navigation/main_nav.xml	
+++ b/app/src/main/res/navigation/main_nav.xml	
@@ -158,10 +158,6 @@
         <action
             android:id="@+id/action_attendanceFragment_to_faceScanningFragment3"
             app:destination="@id/faceScanningFragment" />
-        <argument
-            android:name="hasilScan"
-            android:defaultValue="belumScan"
-            app:argType="string" />
         <!--        <argument-->
         <!--            android:name="hasilScan"-->
         <!--            app:argType="string"-->
Index: app/src/main/java/com/infinity/dsmabsen/ui/fragment/FaceScanningFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.ui.fragment\r\n\r\nimport android.Manifest\r\nimport android.content.pm.PackageManager\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.SurfaceHolder\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.google.android.gms.vision.CameraSource\r\nimport com.google.android.gms.vision.Detector\r\nimport com.google.android.gms.vision.face.Face\r\nimport com.google.android.gms.vision.face.FaceDetector\r\nimport com.infinity.dsmabsen.R\r\nimport com.infinity.dsmabsen.databinding.FragmentFaceScanningBinding\r\nimport com.infinity.dsmabsen.databinding.FragmentScanWajahBinding\r\nimport com.infinity.dsmabsen.ui.activity.MainActivity\r\nimport com.infinity.dsmabsen.ui.viewModel.AttendanceViewModel\r\n\r\n\r\nclass FaceScanningFragment : Fragment() {\r\n    private val viewModel: AttendanceViewModel by viewModels()\r\n    private lateinit var binding: FragmentFaceScanningBinding\r\n    private lateinit var cameraSource: CameraSource\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        binding = FragmentFaceScanningBinding.inflate(inflater, container, false)\r\n        return binding.root\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        val myActivities = activity as MainActivity\r\n        myActivities.toast()\r\n        if (ContextCompat.checkSelfPermission(\r\n                requireContext(),\r\n                Manifest.permission.CAMERA\r\n            ) != PackageManager.PERMISSION_GRANTED\r\n        ) {\r\n            ActivityCompat.requestPermissions(\r\n                requireActivity(),\r\n                arrayOf(Manifest.permission.CAMERA),\r\n                ScanWajahFragment.CAMERA_PERMISSION_REQUEST_CODE\r\n            )\r\n        } else {\r\n            startFaceDetection()\r\n        }\r\n    }\r\n\r\n    @Deprecated(\"Deprecated in Java\")\r\n    override fun onRequestPermissionsResult(\r\n        requestCode: Int,\r\n        permissions: Array<out String>,\r\n        grantResults: IntArray\r\n    ) {\r\n        if (requestCode == ScanWajahFragment.CAMERA_PERMISSION_REQUEST_CODE) {\r\n            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                startFaceDetection()\r\n            } else {\r\n                Toast.makeText(\r\n                    requireContext(),\r\n                    \"Camera permission is required for face detection\",\r\n                    Toast.LENGTH_SHORT\r\n                ).show()\r\n                requireActivity().finish()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun startFaceDetection() {\r\n        val faceDetector = FaceDetector.Builder(requireContext())\r\n            .setTrackingEnabled(false)\r\n            .setLandmarkType(FaceDetector.ALL_LANDMARKS)\r\n            .setClassificationType(FaceDetector.ALL_CLASSIFICATIONS)\r\n            .build()\r\n\r\n        // create camera source\r\n        cameraSource = CameraSource.Builder(requireContext(), faceDetector)\r\n            .setRequestedPreviewSize(640, 480)\r\n            .setFacing(CameraSource.CAMERA_FACING_FRONT)\r\n            .setAutoFocusEnabled(true)\r\n            .build()\r\n\r\n        // add callback to surface holder\r\n        binding.cameraPreview.holder.addCallback(object : SurfaceHolder.Callback {\r\n            override fun surfaceCreated(holder: SurfaceHolder) {\r\n                try {\r\n                    cameraSource.start(binding.cameraPreview.holder)\r\n                } catch (e: Exception) {\r\n                    Toast.makeText(\r\n                        requireContext(),\r\n                        \"Unable to start camera: ${e.message}\",\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                }\r\n            }\r\n\r\n            override fun surfaceChanged(\r\n                holder: SurfaceHolder,\r\n                format: Int,\r\n                width: Int,\r\n                height: Int\r\n            ) {\r\n\r\n            }\r\n\r\n            override fun surfaceDestroyed(p0: SurfaceHolder) {\r\n                cameraSource.stop()\r\n            }\r\n        })\r\n        // add face detection listener\r\n        faceDetector.setProcessor(object : Detector.Processor<Face> {\r\n            override fun release() {}\r\n\r\n            override fun receiveDetections(detections: Detector.Detections<Face>) {\r\n                val faces = detections.detectedItems\r\n                if (faces.size() > 0) {\r\n                    // face detected\r\n                    requireActivity().runOnUiThread {\r\n                        if (isAdded()) {\r\n//                            val activity = requireActivity()\r\n//                            activity.onBackPressed()\r\n\r\n                            val data = \"hasilScanWajah\"\r\n                            val action =\r\n                                FaceScanningFragmentDirections.faceScanningToAttendance(data)\r\n                            findNavController().navigate(action)\r\n                        } else {\r\n                            Toast.makeText(\r\n                                requireContext(),\r\n                                \"fragment tidak dalam activity\",\r\n                                Toast.LENGTH_SHORT\r\n                            ).show()\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        if (::cameraSource.isInitialized) {\r\n            cameraSource.release()\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/FaceScanningFragment.kt b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/FaceScanningFragment.kt
--- a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/FaceScanningFragment.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/FaceScanningFragment.kt	
@@ -133,9 +133,9 @@
 //                            activity.onBackPressed()
 
                             val data = "hasilScanWajah"
-                            val action =
-                                FaceScanningFragmentDirections.faceScanningToAttendance(data)
-                            findNavController().navigate(action)
+//                            val action =
+//                                FaceScanningFragmentDirections.faceScanningToAttendance(data)
+//                            findNavController().navigate(action)
                         } else {
                             Toast.makeText(
                                 requireContext(),
Index: app/src/main/java/com/infinity/dsmabsen/ui/fragment/ScanFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.ui.fragment\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport androidx.fragment.app.Fragment\r\nimport android.widget.Toast\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.budiyev.android.codescanner.CodeScanner\r\nimport com.budiyev.android.codescanner.DecodeCallback\r\nimport com.infinity.dsmabsen.R\r\nimport com.infinity.dsmabsen.databinding.FragmentScanBinding\r\nimport com.infinity.dsmabsen.model.Code\r\n\r\nclass ScanFragment : BaseFragment<FragmentScanBinding>(FragmentScanBinding::inflate){\r\n    private lateinit var codeScanner: CodeScanner\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        setupToolbar(\"Scan Barcode\")\r\n        toolbar.setOnMenuItemClickListener { menuItem ->\r\n            when (menuItem.itemId) {\r\n                else -> false\r\n            }\r\n        }\r\n        setHasOptionsMenu(true)\r\n        val scannerView = binding.scannerView\r\n        val activity = requireActivity()\r\n        codeScanner = CodeScanner(activity, scannerView)\r\n        codeScanner.decodeCallback = DecodeCallback {\r\n            activity.runOnUiThread {\r\n                val data = it.text\r\n                Log.d(\"scan\", data)\r\n                val fragment = PenganjuanVisitFragment()\r\n                val bundle = Bundle()\r\n                bundle.putString(\"data\", data)\r\n                fragment.arguments = bundle\r\n                val fragmentTransaction = parentFragmentManager.beginTransaction()\r\n                fragmentTransaction.replace(R.id.fragmentContainerView2, fragment)\r\n                fragmentTransaction.addToBackStack(null)\r\n                fragmentTransaction.commit()\r\n\r\n                val action =\r\n                    ScanFragmentDirections.actionScanFragmentToPenganjuanVisitFragment(data)\r\n                findNavController().navigate(action)\r\n//                Toast.makeText(activity, it.text, Toast.LENGTH_LONG).show()\r\n            }\r\n        }\r\n        scannerView.setOnClickListener {\r\n            codeScanner.startPreview()\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        codeScanner.startPreview()\r\n    }\r\n\r\n    override fun onPause() {\r\n        codeScanner.releaseResources()\r\n        super.onPause()\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\r\n        inflater.inflate(R.menu.toolbar_menu, menu)\r\n        val menuSave = menu.findItem(R.id.save)\r\n        val menuPlus = menu.findItem(R.id.add)\r\n        val menuLogout = menu.findItem(R.id.logout)\r\n        val menuScan = menu.findItem(R.id.scan)\r\n\r\n        menuScan.isVisible = false\r\n        menuLogout.isVisible = false\r\n        menuSave?.isVisible = false\r\n        menuPlus?.isVisible = false\r\n    }\r\n\r\n//    override fun onDestroyView() {\r\n//        super.onDestroyView()\r\n//        _binding = null\r\n//    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/ScanFragment.kt b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/ScanFragment.kt
--- a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/ScanFragment.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/ScanFragment.kt	
@@ -2,15 +2,14 @@
 
 import android.os.Bundle
 import android.util.Log
-import android.view.*
-import androidx.fragment.app.Fragment
-import android.widget.Toast
+import android.view.Menu
+import android.view.MenuInflater
+import android.view.View
 import androidx.navigation.fragment.findNavController
 import com.budiyev.android.codescanner.CodeScanner
 import com.budiyev.android.codescanner.DecodeCallback
 import com.infinity.dsmabsen.R
 import com.infinity.dsmabsen.databinding.FragmentScanBinding
-import com.infinity.dsmabsen.model.Code
 
 class ScanFragment : BaseFragment<FragmentScanBinding>(FragmentScanBinding::inflate){
     private lateinit var codeScanner: CodeScanner
Index: app/src/main/java/com/infinity/dsmabsen/helper/GPSStatusLiveData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/helper/GPSStatusLiveData.kt b/app/src/main/java/com/infinity/dsmabsen/helper/GPSStatusLiveData.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/infinity/dsmabsen/helper/GPSStatusLiveData.kt	
@@ -0,0 +1,118 @@
+package com.infinity.dsmabsen.helper
+
+import android.Manifest
+import android.app.Activity
+import android.content.Context
+import android.content.DialogInterface
+import android.content.Intent
+import android.content.pm.PackageManager
+import android.location.LocationManager
+import android.os.Build
+import android.provider.Settings
+import androidx.appcompat.app.AlertDialog
+import androidx.core.app.ActivityCompat
+import androidx.core.content.ContextCompat
+import androidx.lifecycle.LiveData
+
+class GPSStatusLiveData private constructor() : LiveData<Boolean>() {
+
+    private lateinit var context: Context
+    private val locationManager by lazy {
+        context.getSystemService(Context.LOCATION_SERVICE) as LocationManager
+    }
+
+    private val gpsStatusListener = object : android.location.GpsStatus.Listener {
+        override fun onGpsStatusChanged(event: Int) {
+            when (event) {
+                android.location.GpsStatus.GPS_EVENT_STOPPED -> {
+                    postValue(false)
+                    showDialog()
+                }
+                else -> postValue(true)
+            }
+        }
+    }
+
+    companion object {
+        private val instances: GPSStatusLiveData by lazy { GPSStatusLiveData() }
+        private var hasInit = false
+
+        fun init(context: Context) {
+            if (!hasInit) {
+                instances.context = context.applicationContext
+                hasInit = true
+            }
+        }
+
+        fun getInstance(): GPSStatusLiveData {
+            return instances
+        }
+    }
+
+    override fun onActive() {
+        super.onActive()
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+            if (ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_FINE_LOCATION)
+                != PackageManager.PERMISSION_GRANTED
+            ) {
+                // Permission is not granted, request the permission
+                ActivityCompat.requestPermissions(
+                    context as Activity,
+                    arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
+                    1
+                )
+                return
+            }
+        }
+
+        val isGPSEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)
+        if (!isGPSEnabled) {
+            postValue(false)
+        }
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
+            locationManager.registerGnssStatusCallback(object :
+                android.location.GnssStatus.Callback() {
+                override fun onStarted() {
+                    super.onStarted()
+                    postValue(true)
+                }
+
+                override fun onStopped() {
+                    super.onStopped()
+                    postValue(false)
+                    showDialog()
+                }
+            })
+        } else {
+            locationManager.addGpsStatusListener(gpsStatusListener)
+        }
+    }
+
+    override fun onInactive() {
+        super.onInactive()
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
+            locationManager.unregisterGnssStatusCallback(object :
+                android.location.GnssStatus.Callback() {})
+        } else {
+            locationManager.removeGpsStatusListener(gpsStatusListener)
+        }
+    }
+
+    private fun showDialog() {
+        val builder = AlertDialog.Builder(context)
+        builder.setMessage("GPS is disabled, do you want to enable it?")
+        builder.setPositiveButton("Yes") { _: DialogInterface, _: Int ->
+            context.startActivity(Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS))
+        }
+        builder.setNegativeButton("No") { dialog: DialogInterface, _: Int ->
+            dialog.cancel()
+        }
+        builder.create().show()
+    }
+}
+
+
+
+
+
Index: app/src/main/java/com/infinity/dsmabsen/helper/AlertDialogHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.helper\r\n\r\nimport android.content.Context\r\nimport androidx.appcompat.app.AlertDialog\r\n\r\nclass AlertDialogHelper(private val context: Context) {\r\n    fun showAlertDialog(title: String, message: String) {\r\n        AlertDialog.Builder(context)\r\n            .setTitle(title)\r\n            .setMessage(message)\r\n            .setPositiveButton(\"OK\") { dialog, _ ->\r\n                dialog.dismiss()\r\n            }\r\n            .show()\r\n    }\r\n}\r\n\r\n//cara panggil\r\n//val alertDialogHelper = AlertDialogHelper(context)\r\n//alertDialogHelper.showAlertDialog(\"Judul\", \"Isi pesan\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/helper/AlertDialogHelper.kt b/app/src/main/java/com/infinity/dsmabsen/helper/AlertDialogHelper.kt
--- a/app/src/main/java/com/infinity/dsmabsen/helper/AlertDialogHelper.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/helper/AlertDialogHelper.kt	
@@ -8,6 +8,7 @@
         AlertDialog.Builder(context)
             .setTitle(title)
             .setMessage(message)
+            .setCancelable(false)
             .setPositiveButton("OK") { dialog, _ ->
                 dialog.dismiss()
             }
Index: app/src/main/java/com/infinity/dsmabsen/helper/LocationUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.helper\r\n\r\nimport android.Manifest\r\nimport android.content.Context\r\nimport android.content.pm.PackageManager\r\nimport androidx.core.app.ActivityCompat\r\nimport com.google.android.gms.location.FusedLocationProviderClient\r\nimport com.google.android.gms.location.LocationServices\r\n\r\nobject LocationUtils {\r\n    private lateinit var fusedLocationProviderClient: FusedLocationProviderClient\r\n\r\n    fun getActualLocation(context: Context, successCallback: (Double, Double) -> Unit, errorCallback: () -> Unit) {\r\n        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(context)\r\n        val task = if (ActivityCompat.checkSelfPermission(\r\n                context,\r\n                Manifest.permission.ACCESS_FINE_LOCATION\r\n            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\r\n                context,\r\n                Manifest.permission.ACCESS_COARSE_LOCATION\r\n            ) != PackageManager.PERMISSION_GRANTED\r\n        ) {\r\n            errorCallback()\r\n            return\r\n        } else {\r\n            fusedLocationProviderClient.lastLocation\r\n        }\r\n\r\n        if (ActivityCompat.checkSelfPermission(context, Manifest.permission.ACCESS_FINE_LOCATION)\r\n            != PackageManager.PERMISSION_GRANTED && ActivityCompat\r\n                .checkSelfPermission(context, Manifest.permission.ACCESS_COARSE_LOCATION)\r\n            != PackageManager.PERMISSION_GRANTED\r\n        ) {\r\n\r\n            errorCallback()\r\n            return\r\n        }\r\n\r\n        task.addOnSuccessListener {\r\n            if (it != null) {\r\n                successCallback(it.latitude, it.longitude)\r\n            } else {\r\n                errorCallback()\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/helper/LocationUtils.kt b/app/src/main/java/com/infinity/dsmabsen/helper/LocationUtils.kt
--- a/app/src/main/java/com/infinity/dsmabsen/helper/LocationUtils.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/helper/LocationUtils.kt	
@@ -3,14 +3,22 @@
 import android.Manifest
 import android.content.Context
 import android.content.pm.PackageManager
+import android.location.Geocoder
+import android.util.Log
 import androidx.core.app.ActivityCompat
 import com.google.android.gms.location.FusedLocationProviderClient
 import com.google.android.gms.location.LocationServices
+import java.text.DateFormat
+import java.util.*
 
 object LocationUtils {
     private lateinit var fusedLocationProviderClient: FusedLocationProviderClient
 
-    fun getActualLocation(context: Context, successCallback: (Double, Double) -> Unit, errorCallback: () -> Unit) {
+    fun getActualLocation(
+        context: Context,
+        successCallback: (Double, Double) -> Unit,
+        errorCallback: () -> Unit
+    ) {
         fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(context)
         val task = if (ActivityCompat.checkSelfPermission(
                 context,
@@ -38,10 +46,42 @@
 
         task.addOnSuccessListener {
             if (it != null) {
+                getTime(context, it.latitude, it.longitude)
                 successCallback(it.latitude, it.longitude)
             } else {
                 errorCallback()
             }
         }
     }
+
+    private fun getTime(context: Context, latitude: Double, longitude: Double) {
+        val geocoder = Geocoder(context, Locale.getDefault())
+        val addresses = geocoder.getFromLocation(latitude, longitude, 1)
+        val timeZone = TimeZone.getDefault()
+
+        val calendar = Calendar.getInstance()
+        calendar.timeInMillis = System.currentTimeMillis()
+        calendar.timeZone = timeZone
+
+        // Tampilkan waktu saat ini dalam format yang diinginkan
+        val time = DateFormat.getTimeInstance().format(calendar.time)
+        val date = DateFormat.getDateInstance().format(calendar.time)
+        val address = addresses?.get(0)?.getAddressLine(0)
+
+        Log.d("LocationUtils", "Waktu: $time, Tanggal: $date, Alamat: $address")
+    }
 }
+
+//  try {
+//            LocationUtils.getActualLocation(this,
+//                { latitude, longitude ->
+//                    binding.lattitude.text = "latitude : $latitude"
+//                    binding.longitude.text = "longitude : $longitude"
+//                },
+//                {
+//                    Toast.makeText(this, "Gagal mendapatkan lokasi", Toast.LENGTH_SHORT).show()
+//                })
+//        } catch (e: java.lang.Exception) {
+//            e.printStackTrace()
+//        }
+
Index: app/src/main/java/com/infinity/dsmabsen/ui/fragment/AttendanceFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.ui.fragment\r\n\r\nimport android.Manifest.permission.*\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Bitmap\r\nimport android.hardware.camera2.CameraCharacteristics\r\nimport android.hardware.camera2.CameraManager\r\nimport android.location.*\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.provider.MediaStore\r\nimport android.provider.Settings\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.activity.result.contract.ActivityResultContracts\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.core.view.isVisible\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.navigation.fragment.findNavController\r\nimport androidx.navigation.fragment.navArgs\r\nimport com.bumptech.glide.Glide\r\nimport com.infinity.dsmabsen.R\r\nimport com.infinity.dsmabsen.databinding.FragmentAttendanceBinding\r\nimport com.infinity.dsmabsen.helper.*\r\nimport com.infinity.dsmabsen.model.DataX\r\nimport com.infinity.dsmabsen.repository.NetworkResult\r\nimport com.infinity.dsmabsen.ui.viewModel.AttendanceViewModel\r\nimport com.google.android.gms.location.FusedLocationProviderClient\r\nimport com.google.android.gms.location.LocationServices\r\nimport com.infinity.dsmabsen.ui.viewModel.UserProfileViewModel\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport io.paperdb.Paper\r\nimport okhttp3.MediaType.Companion.toMediaTypeOrNull\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody.Companion.toRequestBody\r\nimport java.io.ByteArrayOutputStream\r\nimport java.io.IOException\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport javax.inject.Inject\r\n\r\n\r\n@AndroidEntryPoint\r\nclass AttendanceFragment :\r\n    BasesFragment<FragmentAttendanceBinding>(FragmentAttendanceBinding::inflate) {\r\n    private lateinit var fusedLocationProviderClient: FusedLocationProviderClient\r\n    private lateinit var locationManager: LocationManager\r\n    private val viewModel: AttendanceViewModel by viewModels()\r\n    private val handler = Handler()\r\n    private val userProfileViewModel: UserProfileViewModel by viewModels()\r\n\r\n    private val args by navArgs<AttendanceFragmentArgs>()\r\n    var latittudeUser1: String? = null\r\n    var longitudeUser2: String? = null\r\n    private lateinit var runnable: Runnable\r\n\r\n\r\n    @Inject\r\n    lateinit var tokenManager: TokenManager\r\n    private val savedUser = Paper.book().read<DataX>(\"user\")\r\n    val nip = savedUser!!.nip\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n\r\n        super.onViewCreated(view, savedInstanceState)\r\n        timeRun()\r\n\r\n        binding.apply {\r\n            Log.d(\"TAG\", args.hasilScan)\r\n\r\n            btnScanWajah.setOnClickListener {\r\n                findNavController().navigate(R.id.action_attendanceFragment_to_faceScanningFragment3)\r\n            }\r\n            val permission =\r\n                arrayOf(ACCESS_FINE_LOCATION, ACCESS_COARSE_LOCATION, ACCESS_BACKGROUND_LOCATION)\r\n            requestLocationPermission()\r\n            locationManager =\r\n                requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager\r\n\r\n            cekGPS()\r\n\r\n            btnAbsen.setOnClickListener {\r\n                camera()\r\n            }\r\n\r\n            userProfileViewModel.profileUserRequest(nip)\r\n            userProfileViewModel.profileUserLivedata.observe(viewLifecycleOwner) {\r\n                when (it) {\r\n                    is NetworkResult.Success -> {\r\n                        loadingInclude.loading.visibility = View.GONE\r\n                        val response = it.data!!\r\n                        val status = response.status\r\n                        val imageUser = response.data.foto\r\n                        toolbarUser.namaUser.text = response.data.nama\r\n                        toolbarUser.jabatan.text = response.data.jabatan\r\n                        if (status) {\r\n                            Glide.with(requireContext())\r\n                                .load(imageUser)\r\n                                .circleCrop()\r\n                                .placeholder(R.drawable.user)\r\n                                .into(toolbarUser.imageUser)\r\n                        }\r\n                    }\r\n\r\n                    is NetworkResult.Loading -> {\r\n                        binding.apply {\r\n                            loadingInclude.loading.visibility = View.VISIBLE\r\n                        }\r\n                    }\r\n\r\n                    is NetworkResult.Error -> {\r\n                        binding.apply {\r\n                            loadingInclude.loading.visibility = View.GONE\r\n                        }\r\n                        handleApiError(it.message)\r\n                    }\r\n                }\r\n            }\r\n\r\n            btnRefresh.setOnClickListener {\r\n                cekGPS()\r\n                getLocation()\r\n                enableAbsen()\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onStart() {\r\n        super.onStart()\r\n        getLocation()\r\n    }\r\n\r\n    private val permissionMultiRequest =\r\n        registerForActivityResult(ActivityResultContracts.RequestMultiplePermissions()) { result ->\r\n            var areAllGranted = true\r\n            for (isGranted in result.values) {\r\n//                Toast.makeText(requireContext(), \"Granted is $isGranted\", Toast.LENGTH_SHORT).show()\r\n                areAllGranted = areAllGranted && isGranted\r\n            }\r\n\r\n            if (areAllGranted) {\r\n                val locationListener = object : LocationListener {\r\n                    override fun onLocationChanged(location: Location) {\r\n                        // Do something with the new location\r\n                    }\r\n\r\n                    override fun onStatusChanged(provider: String?, status: Int, extras: Bundle?) {}\r\n\r\n                    override fun onProviderEnabled(provider: String) {\r\n                        if (provider == LocationManager.GPS_PROVIDER) {\r\n\r\n                        }\r\n                    }\r\n\r\n                    override fun onProviderDisabled(provider: String) {\r\n                    }\r\n                }\r\n                requestLocationPermission()\r\n                locationManager.requestLocationUpdates(\r\n                    LocationManager.GPS_PROVIDER,\r\n                    0,\r\n                    0f,\r\n                    locationListener\r\n                )\r\n\r\n                getLocation()\r\n            } else {\r\n            }\r\n        }\r\n\r\n\r\n    private fun getLocationUser() {\r\n        locationManager =\r\n            requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager\r\n        fusedLocationProviderClient =\r\n            LocationServices.getFusedLocationProviderClient(requireContext())\r\n        Log.d(\"ambil_lokasi\", \"On2 Proses\")\r\n        val task = fusedLocationProviderClient.lastLocation\r\n        task.addOnSuccessListener {\r\n            if (it != null) {\r\n                with(binding) {\r\n                    latittudeUser1 = it.latitude.toString()\r\n                    longitudeUser2 = it.longitude.toString()\r\n                    lattitudeUser.text = it.latitude.toString()\r\n                    longitudeUser.text = it.longitude.toString()\r\n                }\r\n                enableAbsen()\r\n            } else {\r\n                with(binding) {\r\n                    lattitudeUser.text = \"-\"\r\n                    longitudeUser.text = \"-\"\r\n                }\r\n                disableAbsen()\r\n            }\r\n            Log.d(\"ambil_lokasi\", \"On3 Proses\")\r\n            getAddressAboveSDK29()\r\n        }\r\n    }\r\n\r\n    private fun getLocation() {\r\n        val locationManager =\r\n            requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager\r\n        locationManager.requestLocationUpdates(\r\n            LocationManager.NETWORK_PROVIDER,\r\n            0L,\r\n            0f,\r\n            locationListener\r\n        )\r\n        Log.d(\"ambil_lokasi\", \"On Proses\")\r\n        getLocationUser()\r\n    }\r\n\r\n    private val locationListener: LocationListener = object : LocationListener {\r\n        override fun onLocationChanged(location: Location) {\r\n            // Mendapatkan latitude dan longitude\r\n            val latitude = location.latitude\r\n            val longitude = location.longitude\r\n\r\n            binding.lattitudeUser.text = latitude.toString()\r\n            binding.longitudeUser.text = longitude.toString()\r\n\r\n        }\r\n\r\n        override fun onStatusChanged(provider: String?, status: Int, extras: Bundle?) {}\r\n        override fun onProviderEnabled(provider: String) {\r\n            getLocationUser()\r\n            enableAbsen()\r\n        }\r\n\r\n        override fun onProviderDisabled(provider: String) {\r\n            cekGPS()\r\n        }\r\n    }\r\n\r\n    override fun onStop() {\r\n        super.onStop()\r\n        locationManager\r\n    }\r\n\r\n    private fun camera() {\r\n        val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\r\n        if (intent.resolveActivity(requireContext().packageManager) != null) {\r\n            val manager = requireContext().getSystemService(Context.CAMERA_SERVICE) as CameraManager\r\n            var cameraId = \"\"\r\n            for (id in manager.cameraIdList) {\r\n                val characteristics = manager.getCameraCharacteristics(id)\r\n                val facing = characteristics.get(CameraCharacteristics.LENS_FACING)\r\n                if (facing == CameraCharacteristics.LENS_FACING_FRONT) {\r\n                    cameraId = id\r\n                    break\r\n                }\r\n            }\r\n            intent.putExtra(\"android.intent.extras.CAMERA_FACING\", 1)\r\n            intent.putExtra(\"android.intent.extras.CAMERA_LENS_FACING_FRONT\", 1)\r\n            intent.putExtra(\"camera_id\", cameraId)\r\n            putPhoto.launch(intent)\r\n        }\r\n    }\r\n\r\n    private val putPhoto =\r\n        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {\r\n            if (it.resultCode == Activity.RESULT_OK) {\r\n\r\n                val selectedImageUris = it?.data?.extras?.get(\"data\") as Bitmap\r\n                absen(selectedImageUris!!)\r\n\r\n            } else if (it == null) {\r\n                Toast.makeText(requireContext(), \"Gambar tidak dapat di set\", Toast.LENGTH_SHORT)\r\n                    .show()\r\n            } else {\r\n                Log.d(\"TAG\", \"Task Cancelled\")\r\n            }\r\n\r\n        }\r\n\r\n    private fun absen(uri: Bitmap) {\r\n        val photo = uriToMultipartBody(uri)\r\n        Log.d(\"gambar\", photo.toString())\r\n        val timeNow = getTime()\r\n        val nipRequestBody = MultipartBody.Part.createFormData(\"nip\",nip)\r\n        val dateRequestBody = MultipartBody.Part.createFormData(\"date\", timeNow)\r\n        val timezoneRequestBody = MultipartBody.Part.createFormData(\"timezone\", \"\")\r\n        val kordinatRequestBody =\r\n            MultipartBody.Part.createFormData(\"kordinat\", \"$latittudeUser1,$longitudeUser2\")\r\n        val kodeShiftRequestBody =\r\n            MultipartBody.Part.createFormData(\"kode_shift\", savedUser?.shift ?: \"\")\r\n        val kodeTingkatRequestBody = MultipartBody.Part.createFormData(\"kode_tingkat\", \"0\")\r\n\r\n        Log.d(\r\n            \"TAG\",\r\n            \"nip :$nipRequestBody date:$dateRequestBody timeZone:$timezoneRequestBody kordinat:$latittudeUser1,$longitudeUser2 kodeshift:$kodeShiftRequestBody kodetingkat:$kodeTingkatRequestBody\"\r\n        )\r\n\r\n        viewModel.attendanceToday2(\r\n            photo,\r\n            nipRequestBody.body,\r\n            dateRequestBody.body,\r\n            timezoneRequestBody.body,\r\n            kordinatRequestBody.body,\r\n            kodeShiftRequestBody.body,\r\n            kodeTingkatRequestBody.body\r\n        )\r\n        viewModel.presensiLiveData.observe(viewLifecycleOwner) {\r\n            when (it) {\r\n                is NetworkResult.Success -> {\r\n                    binding.loadingInclude.loading.visibility = View.GONE\r\n\r\n                    val response = it.data!!\r\n                    val statusServer = response.status\r\n                    val statusPresensi = response.data.status\r\n                    val message = response.data.messages\r\n                    if (statusPresensi == \"Error\") {\r\n                        binding.apply {\r\n                            materialCardView21.isVisible = true\r\n                            notificationUser.isVisible = true\r\n                            informationLayout.isVisible = true\r\n                            notificationUser.text = message\r\n                            informationLayout.setBackgroundColor(\r\n                                ContextCompat.getColor(\r\n                                    requireContext(),\r\n                                    R.color._danger\r\n                                )\r\n                            )\r\n                        }\r\n                    } else {\r\n                        binding.apply {\r\n                            binding.materialCardView21.isVisible = true\r\n                            binding.notificationUser.isVisible = true\r\n                            binding.informationLayout.isVisible = true\r\n                            binding.notificationUser.text = message\r\n                            binding.informationLayout.setBackgroundColor(\r\n                                ContextCompat.getColor(\r\n                                    requireContext(),\r\n                                    R.color._success\r\n                                )\r\n                            )\r\n                        }\r\n                    }\r\n\r\n                }\r\n                is NetworkResult.Loading -> {\r\n                    binding.loadingInclude.loading.visibility = View.VISIBLE\r\n                }\r\n\r\n                is NetworkResult.Error -> {\r\n                    binding.loadingInclude.loading.visibility = View.GONE\r\n                    handleApiError(it.message)\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private fun getTime(): String {\r\n        val dateFormat = SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.getDefault())\r\n        val date = Date()\r\n        return dateFormat.format(date)\r\n    }\r\n\r\n    private fun uriToMultipartBody(bitmap: Bitmap): MultipartBody.Part {\r\n        val byteArrayOutputStream = ByteArrayOutputStream()\r\n        bitmap.compress(Bitmap.CompressFormat.PNG, 100, byteArrayOutputStream)\r\n        val byteArray = byteArrayOutputStream.toByteArray()\r\n        val requestFile = byteArray.toRequestBody(\"image/png\".toMediaTypeOrNull())\r\n        return MultipartBody.Part.createFormData(\"image\", \"image.png\", requestFile)\r\n    }\r\n\r\n    private val singlePermissionLaunch =\r\n        registerForActivityResult(ActivityResultContracts.RequestPermission()) { isGranted ->\r\n            Log.d(Constans.TAG, \"permission is Granted: $isGranted\")\r\n            if (isGranted) {\r\n                Log.d(\"TAG\", \"permission granted\")\r\n//                Toast.makeText(requireContext(), \"Permission camera is granted\", Toast.LENGTH_SHORT)\r\n//                    .show()\r\n\r\n            } else {\r\n                Log.d(Constans.TAG, \"Permission camera  : Permission Denied \")\r\n//                Toast.makeText(requireContext(), \"Permission camera Denied \", Toast.LENGTH_SHORT)\r\n//                    .show()\r\n            }\r\n        }\r\n\r\n    private fun getAddressAboveSDK29() {\r\n        if (ActivityCompat.checkSelfPermission(\r\n                requireContext(),\r\n                ACCESS_FINE_LOCATION\r\n            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\r\n                requireContext(),\r\n                ACCESS_COARSE_LOCATION\r\n            ) != PackageManager.PERMISSION_GRANTED\r\n        ) Log.d(\"ambil_lokasi\", \"On4 Proses\")\r\n        runLoading()\r\n\r\n        fusedLocationProviderClient.lastLocation\r\n            .addOnSuccessListener { location: Location? ->\r\n                try {\r\n                    val provider = LocationManager.NETWORK_PROVIDER\r\n                    val location = locationManager.getLastKnownLocation(provider)\r\n                    if (location != null) {\r\n                        val latitude = location.latitude\r\n                        val longitude = location.longitude\r\n                        val geocoder = Geocoder(requireContext(), Locale.getDefault())\r\n                        val alertDialogHelper = AlertDialogHelper(requireContext())\r\n                        try {\r\n                            val addresses = geocoder.getFromLocation(latitude, longitude, 1)\r\n                            if (addresses != null && addresses.isNotEmpty()) {\r\n                                val address = addresses[0].getAddressLine(0)\r\n                                binding.currentLocation.text = address\r\n//                                enableAbsen()\r\n                            } else {\r\n                                binding.currentLocation.text = \"-\"\r\n//                                disableAbsen()\r\n                                alertDialogHelper.showAlertDialog(\r\n                                    \"Absen\",\r\n                                    \"Lokasi tidak di temukan\"\r\n                                )\r\n                            }\r\n                        } catch (e: IOException) {\r\n                            binding.currentLocation.text = \"-\"\r\n//                            disableAbsen()\r\n                            alertDialogHelper.showAlertDialog(\r\n                                \"Absen\",\r\n                                \"Lokasi tidak di temukan, periksa kembali koneksi anda\"\r\n                            )\r\n                            e.printStackTrace()\r\n                        }\r\n                        stopLoading()\r\n                    } else {\r\n                    }\r\n\r\n                } catch (e: Exception) {\r\n                    Log.d(\"ambil_lokasi\", \"Error : ${e.message}\")\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n    private fun getAddressBelowSDK29() {\r\n        fusedLocationProviderClient.lastLocation\r\n            .addOnSuccessListener { location: Location? ->\r\n                // Mendapatkan alamat pengguna berdasarkan lokasi yang diperoleh\r\n                val geocoder = Geocoder(requireContext(), Locale.getDefault())\r\n\r\n                val addresses = geocoder.getFromLocation(\r\n                    location?.latitude ?: 0.0,\r\n                    location?.longitude ?: 0.0,\r\n                    1\r\n                )\r\n                // Mengambil alamat dari objek Address dan menampilkannya pada TextView\r\n                val address: String? = addresses!![0].getAddressLine(0)\r\n                val city: String? = addresses[0].locality\r\n                val state: String? = addresses[0].adminArea\r\n                val country: String? = addresses[0].countryName\r\n                val postalCode: String? = addresses[0].postalCode\r\n                val knownName: String? = addresses[0].featureName\r\n\r\n                binding.currentLocation.text =\r\n                    \"$address\"\r\n            }\r\n    }\r\n\r\n    private fun isLocationPermissionGranted(): Boolean {\r\n        return ContextCompat.checkSelfPermission(\r\n            requireActivity(),\r\n            ACCESS_FINE_LOCATION\r\n        ) == PackageManager.PERMISSION_GRANTED\r\n    }\r\n\r\n    private fun requestLocationPermission() {\r\n        if (isLocationPermissionGranted()) {\r\n\r\n        }\r\n        if (shouldShowRequestPermissionRationale(ACCESS_FINE_LOCATION)) {\r\n        } else {\r\n            requestPermissionLauncher.launch(ACCESS_FINE_LOCATION)\r\n        }\r\n    }\r\n\r\n    private val requestPermissionLauncher =\r\n        registerForActivityResult(ActivityResultContracts.RequestPermission()) { isGranted: Boolean ->\r\n            if (isGranted) {\r\n                Log.d(\"TAG\", \"Izin lokasi telah diberikan\")\r\n//                Toast.makeText(requireContext(), \"Izin lokasi telah diberikan\", Toast.LENGTH_SHORT)\r\n//                    .show()\r\n            } else {\r\n                Log.d(\"TAG\", \"Izin lokasi ditolak\")\r\n//                Toast.makeText(requireContext(), \"Izin lokasi ditolak\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun timeRun() {\r\n\r\n        runnable = object : Runnable {\r\n            override fun run() {\r\n                val timestamp = System.currentTimeMillis()\r\n\r\n                // Create a SimpleDateFormat object with the system timezone\r\n                val sdfHari = SimpleDateFormat(\"dd\", Locale.getDefault())\r\n                val sdfBulan = SimpleDateFormat(\"MM\", Locale.getDefault())\r\n                val sdfTahun = SimpleDateFormat(\"yyyy\", Locale.getDefault())\r\n\r\n                val sdfJam = SimpleDateFormat(\"HH\", Locale.getDefault())\r\n                val sdfMenit = SimpleDateFormat(\"mm\", Locale.getDefault())\r\n                val sdfDetik = SimpleDateFormat(\"ss\", Locale.getDefault())\r\n\r\n                sdfHari.timeZone = TimeZone.getDefault()\r\n                sdfBulan.timeZone = TimeZone.getDefault()\r\n                sdfTahun.timeZone = TimeZone.getDefault()\r\n                sdfJam.timeZone = TimeZone.getDefault()\r\n                sdfMenit.timeZone = TimeZone.getDefault()\r\n                sdfDetik.timeZone = TimeZone.getDefault()\r\n\r\n                // Format the timestamp with the SimpleDateFormat object\r\n                val formattedDateJam = sdfJam.format(Date(timestamp))\r\n                val formattedDateMenit = sdfMenit.format(Date(timestamp))\r\n                val formattedDateDetik = sdfDetik.format(Date(timestamp))\r\n//                Log.d(\"run jam\", \"Formatted date with system timezone: $formattedDate\")\r\n\r\n//                val currentTime = System.currentTimeMillis()\r\n//                val seconds = (currentTime / 1000) % 60\r\n//                val minutes = (currentTime / (1000 * 60)) % 60\r\n//                val hours = (currentTime / (1000 * 60 * 60)) % 24\r\n                binding.tvTime.text =\r\n                    \"$formattedDateJam : $formattedDateMenit : $formattedDateDetik\"\r\n\r\n\r\n//                binding.textView3.text = formattedDate\r\n//                textViewa.text = String.format(\"%02d:%02d:%02d\", hours, minutes, seconds)\r\n                binding.tvHari.text = sdfHari.format(Date(timestamp))\r\n                binding.tvBulan.text = sdfBulan.format(Date(timestamp))\r\n                binding.tvTahun.text = sdfTahun.format(Date(timestamp))\r\n                handler.postDelayed(this, 1000)\r\n            }\r\n        }\r\n    }\r\n\r\n    fun cekGPS() {\r\n        // Cek apakah GPS sedang aktif\r\n        val isGpsEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)\r\n        if (!isGpsEnabled) {\r\n            // GPS tidak aktif, tampilkan dialog untuk meminta pengguna mengaktifkannya\r\n            val builder = AlertDialog.Builder(requireContext())\r\n            builder.setMessage(\"GPS tidak aktif, aktifkan GPS?\")\r\n                .setCancelable(false)\r\n                .setPositiveButton(\"Ya\") { _, _ ->\r\n                    startActivity(Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS))\r\n                    enableAbsen()\r\n                }\r\n                .setNegativeButton(\"Tidak\") { dialog, _ ->\r\n                    disableAbsen()\r\n                    dialog.cancel()\r\n                }\r\n            val alert = builder.create()\r\n            alert.show()\r\n        }\r\n    }\r\n\r\n\r\n    fun mematikanGPS() {\r\n        val locationManager =\r\n            requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager\r\n        locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)?.let { isGPSOn ->\r\n            if (isGPSOn) {\r\n                val intent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n    }\r\n\r\n    fun menyalakanGPS() {\r\n        val locationManager =\r\n            requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager\r\n        locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)?.let { isGPSOn ->\r\n            if (!isGPSOn) {\r\n                val intent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n    }\r\n\r\n    fun enableAbsen() {\r\n        binding.imgFinger.background = resources.getDrawable(R.color._danger)\r\n        binding.btnAbsen.isClickable = true\r\n    }\r\n\r\n    private fun disableAbsen() {\r\n        binding.imgFinger.background = resources.getDrawable(R.color._grey)\r\n        binding.btnAbsen.isClickable = false\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        handler.postDelayed(runnable, 0)\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        handler.removeCallbacks(runnable)\r\n    }\r\n\r\n    private fun runLoading() {\r\n        binding.searchLocationLoading.visibility = View.VISIBLE\r\n    }\r\n\r\n    private fun stopLoading() {\r\n        binding.searchLocationLoading.visibility = View.GONE\r\n        binding.searchLocationLoading.cancelAnimation()\r\n    }\r\n\r\n//    override fun onConnectionAvailable() {\r\n//        super.onConnectionAvailable()\r\n//        binding.apply {\r\n//            toolbar.toolbar.visibility = View.GONE\r\n//            rcycleview.visibility = View.VISIBLE\r\n//            noInternetConnection.ivNoConnection.visibility = View.GONE\r\n//        }\r\n//    }\r\n//\r\n//    override fun onConnectionLost() {\r\n//        super.onConnectionLost()\r\n//        binding.apply {\r\n////            toolbar.toolbar.visibility = View.GONE\r\n//            rcycleview.visibility = View.GONE\r\n//            noInternetConnection.ivNoConnection.visibility = View.VISIBLE\r\n//        }\r\n//    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/AttendanceFragment.kt b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/AttendanceFragment.kt
--- a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/AttendanceFragment.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/AttendanceFragment.kt	
@@ -25,16 +25,15 @@
 import androidx.core.view.isVisible
 import androidx.fragment.app.viewModels
 import androidx.navigation.fragment.findNavController
-import androidx.navigation.fragment.navArgs
 import com.bumptech.glide.Glide
+import com.google.android.gms.location.FusedLocationProviderClient
+import com.google.android.gms.location.LocationServices
 import com.infinity.dsmabsen.R
 import com.infinity.dsmabsen.databinding.FragmentAttendanceBinding
 import com.infinity.dsmabsen.helper.*
 import com.infinity.dsmabsen.model.DataX
 import com.infinity.dsmabsen.repository.NetworkResult
 import com.infinity.dsmabsen.ui.viewModel.AttendanceViewModel
-import com.google.android.gms.location.FusedLocationProviderClient
-import com.google.android.gms.location.LocationServices
 import com.infinity.dsmabsen.ui.viewModel.UserProfileViewModel
 import dagger.hilt.android.AndroidEntryPoint
 import io.paperdb.Paper
@@ -45,7 +44,6 @@
 import java.io.IOException
 import java.text.SimpleDateFormat
 import java.util.*
-import javax.inject.Inject
 
 
 @AndroidEntryPoint
@@ -56,46 +54,73 @@
     private val viewModel: AttendanceViewModel by viewModels()
     private val handler = Handler()
     private val userProfileViewModel: UserProfileViewModel by viewModels()
+    private lateinit var dialog: AlertDialog
 
-    private val args by navArgs<AttendanceFragmentArgs>()
     var latittudeUser1: String? = null
     var longitudeUser2: String? = null
     private lateinit var runnable: Runnable
 
-
-    @Inject
-    lateinit var tokenManager: TokenManager
     private val savedUser = Paper.book().read<DataX>("user")
     val nip = savedUser!!.nip
 
-    @RequiresApi(Build.VERSION_CODES.O)
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-
         super.onViewCreated(view, savedInstanceState)
         timeRun()
 
         binding.apply {
-            Log.d("TAG", args.hasilScan)
-
+            btnAbsen.setOnClickListener {
+                camera()
+            }
             btnScanWajah.setOnClickListener {
                 findNavController().navigate(R.id.action_attendanceFragment_to_faceScanningFragment3)
             }
-            val permission =
-                arrayOf(ACCESS_FINE_LOCATION, ACCESS_COARSE_LOCATION, ACCESS_BACKGROUND_LOCATION)
+            btnRefresh.setOnClickListener {
+                if (!isGpsEnabled()) {
+                    dialog.show()
+                }
+                getLocation()
+            }
+            getProfileUser()
             requestLocationPermission()
             locationManager =
                 requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager
 
-            cekGPS()
+            locationManager =
+                requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager
+
+            dialog = AlertDialog.Builder(requireContext())
+                .setMessage("GPS tidak aktif, silakan aktifkan GPS.")
+                .setPositiveButton("Pengaturan") { _, _ ->
+                    startActivity(Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS))
+                }
+                .setNegativeButton("Batal") { _, _ ->
+                    gpsNoActive()
+                }
+                .setCancelable(false)
+                .create()
+
+            if (!isGpsEnabled()) {
+                dialog.show()
+            }
+
 
-            btnAbsen.setOnClickListener {
-                camera()
-            }
+        }
+    }
 
-            userProfileViewModel.profileUserRequest(nip)
-            userProfileViewModel.profileUserLivedata.observe(viewLifecycleOwner) {
-                when (it) {
-                    is NetworkResult.Success -> {
+    private fun isGpsEnabled(): Boolean {
+        return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)
+    }
+
+    private fun gpsNoActive() {
+        disableAbsen()
+    }
+
+    private fun getProfileUser() {
+        userProfileViewModel.profileUserRequest(nip)
+        userProfileViewModel.profileUserLivedata.observe(viewLifecycleOwner) {
+            when (it) {
+                is NetworkResult.Success -> {
+                    binding.apply {
                         loadingInclude.loading.visibility = View.GONE
                         val response = it.data!!
                         val status = response.status
@@ -110,73 +135,23 @@
                                 .into(toolbarUser.imageUser)
                         }
                     }
+                }
 
-                    is NetworkResult.Loading -> {
-                        binding.apply {
-                            loadingInclude.loading.visibility = View.VISIBLE
-                        }
-                    }
+                is NetworkResult.Loading -> {
+                    binding.apply {
+                        loadingInclude.loading.visibility = View.VISIBLE
+                    }
+                }
 
-                    is NetworkResult.Error -> {
-                        binding.apply {
-                            loadingInclude.loading.visibility = View.GONE
-                        }
-                        handleApiError(it.message)
-                    }
-                }
-            }
-
-            btnRefresh.setOnClickListener {
-                cekGPS()
-                getLocation()
-                enableAbsen()
-            }
-        }
-    }
-
-    override fun onStart() {
-        super.onStart()
-        getLocation()
-    }
-
-    private val permissionMultiRequest =
-        registerForActivityResult(ActivityResultContracts.RequestMultiplePermissions()) { result ->
-            var areAllGranted = true
-            for (isGranted in result.values) {
-//                Toast.makeText(requireContext(), "Granted is $isGranted", Toast.LENGTH_SHORT).show()
-                areAllGranted = areAllGranted && isGranted
-            }
-
-            if (areAllGranted) {
-                val locationListener = object : LocationListener {
-                    override fun onLocationChanged(location: Location) {
-                        // Do something with the new location
-                    }
-
-                    override fun onStatusChanged(provider: String?, status: Int, extras: Bundle?) {}
-
-                    override fun onProviderEnabled(provider: String) {
-                        if (provider == LocationManager.GPS_PROVIDER) {
-
-                        }
-                    }
-
-                    override fun onProviderDisabled(provider: String) {
-                    }
-                }
-                requestLocationPermission()
-                locationManager.requestLocationUpdates(
-                    LocationManager.GPS_PROVIDER,
-                    0,
-                    0f,
-                    locationListener
-                )
-
-                getLocation()
-            } else {
-            }
-        }
-
+                is NetworkResult.Error -> {
+                    binding.apply {
+                        loadingInclude.loading.visibility = View.GONE
+                    }
+                    handleApiError(it.message)
+                }
+            }
+        }
+    }
 
     private fun getLocationUser() {
         locationManager =
@@ -221,31 +196,100 @@
 
     private val locationListener: LocationListener = object : LocationListener {
         override fun onLocationChanged(location: Location) {
-            // Mendapatkan latitude dan longitude
+            stopLoading()
             val latitude = location.latitude
             val longitude = location.longitude
+            if (location != null) {
+                val geocoder = Geocoder(requireContext(), Locale.getDefault())
+                try {
+                    val addresses = geocoder.getFromLocation(latitude, longitude, 1)
+                    if (addresses != null && addresses.isNotEmpty()) {
+                        val address = addresses[0].getAddressLine(0)
+                        binding.currentLocation.text = address.toString()
+
+                    } else {
+                        binding.currentLocation.text = "-"
+                                disableAbsen()
+                        handleApiError("Lokasi tidak ditemukan")
+                    }
 
-            binding.lattitudeUser.text = latitude.toString()
-            binding.longitudeUser.text = longitude.toString()
+                    binding.lattitudeUser.text = latitude.toString()
+                    binding.longitudeUser.text = longitude.toString()
+                } catch (e: Exception) {
+                    handleApiError(e.toString())
+                }
 
-        }
+            } else {
+               runLoading()
+               handleApiError("lokasi tidak dapat ditemukan")
+            }
 
-        override fun onStatusChanged(provider: String?, status: Int, extras: Bundle?) {}
-        override fun onProviderEnabled(provider: String) {
-            getLocationUser()
-            enableAbsen()
+            if (isGpsEnabled()) {
+                dialog.dismiss()
+                enableAbsen()
+            } else {
+                runLoading()
+            }
+        }
+
+        override fun onProviderEnabled(provider: String) {
+
         }
 
         override fun onProviderDisabled(provider: String) {
-            cekGPS()
+            dialog.show()
+            runLoading()
         }
     }
+
+//    private fun cekGPS() {
+//        val gpsEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)
+//        if (!gpsEnabled) {
+//            showGPSAlertDialog()
+//        } else {
+//            getLocationUser()
+//            enableAbsen()
+//            stopLoading()
+//        }
+//    }
+
+    override fun onStart() {
+        super.onStart()
+        getLocation()
+    }
 
     override fun onStop() {
         super.onStop()
         locationManager
     }
 
+    override fun onResume() {
+        super.onResume()
+        handler.postDelayed(runnable, 0)
+        if (ActivityCompat.checkSelfPermission(
+                requireContext(),
+                ACCESS_FINE_LOCATION
+            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
+                requireContext(),
+                ACCESS_COARSE_LOCATION
+            ) != PackageManager.PERMISSION_GRANTED
+        ) {
+            return
+        }
+        locationManager.requestLocationUpdates(
+            LocationManager.GPS_PROVIDER,
+            0,
+            0f,
+            locationListener
+        )
+    }
+
+    override fun onPause() {
+        super.onPause()
+        handler.removeCallbacks(runnable)
+        locationManager.removeUpdates(locationListener)
+    }
+
     private fun camera() {
         val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)
         if (intent.resolveActivity(requireContext().packageManager) != null) {
@@ -266,27 +310,11 @@
         }
     }
 
-    private val putPhoto =
-        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {
-            if (it.resultCode == Activity.RESULT_OK) {
-
-                val selectedImageUris = it?.data?.extras?.get("data") as Bitmap
-                absen(selectedImageUris!!)
-
-            } else if (it == null) {
-                Toast.makeText(requireContext(), "Gambar tidak dapat di set", Toast.LENGTH_SHORT)
-                    .show()
-            } else {
-                Log.d("TAG", "Task Cancelled")
-            }
-
-        }
-
     private fun absen(uri: Bitmap) {
         val photo = uriToMultipartBody(uri)
         Log.d("gambar", photo.toString())
         val timeNow = getTime()
-        val nipRequestBody = MultipartBody.Part.createFormData("nip",nip)
+        val nipRequestBody = MultipartBody.Part.createFormData("nip", nip)
         val dateRequestBody = MultipartBody.Part.createFormData("date", timeNow)
         val timezoneRequestBody = MultipartBody.Part.createFormData("timezone", "")
         val kordinatRequestBody =
@@ -315,7 +343,6 @@
                     binding.loadingInclude.loading.visibility = View.GONE
 
                     val response = it.data!!
-                    val statusServer = response.status
                     val statusPresensi = response.data.status
                     val message = response.data.messages
                     if (statusPresensi == "Error") {
@@ -361,11 +388,21 @@
 
     }
 
-    private fun getTime(): String {
-        val dateFormat = SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault())
-        val date = Date()
-        return dateFormat.format(date)
-    }
+    private val putPhoto =
+        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {
+            if (it.resultCode == Activity.RESULT_OK) {
+
+                val selectedImageUris = it?.data?.extras?.get("data") as Bitmap
+                absen(selectedImageUris!!)
+
+            } else if (it == null) {
+                Toast.makeText(requireContext(), "Gambar tidak dapat di set", Toast.LENGTH_SHORT)
+                    .show()
+            } else {
+                Log.d("TAG", "Task Cancelled")
+            }
+
+        }
 
     private fun uriToMultipartBody(bitmap: Bitmap): MultipartBody.Part {
         val byteArrayOutputStream = ByteArrayOutputStream()
@@ -375,20 +412,11 @@
         return MultipartBody.Part.createFormData("image", "image.png", requestFile)
     }
 
-    private val singlePermissionLaunch =
-        registerForActivityResult(ActivityResultContracts.RequestPermission()) { isGranted ->
-            Log.d(Constans.TAG, "permission is Granted: $isGranted")
-            if (isGranted) {
-                Log.d("TAG", "permission granted")
-//                Toast.makeText(requireContext(), "Permission camera is granted", Toast.LENGTH_SHORT)
-//                    .show()
-
-            } else {
-                Log.d(Constans.TAG, "Permission camera  : Permission Denied ")
-//                Toast.makeText(requireContext(), "Permission camera Denied ", Toast.LENGTH_SHORT)
-//                    .show()
-            }
-        }
+    private fun getTime(): String {
+        val dateFormat = SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault())
+        val date = Date()
+        return dateFormat.format(date)
+    }
 
     private fun getAddressAboveSDK29() {
         if (ActivityCompat.checkSelfPermission(
@@ -445,30 +473,6 @@
             }
     }
 
-    private fun getAddressBelowSDK29() {
-        fusedLocationProviderClient.lastLocation
-            .addOnSuccessListener { location: Location? ->
-                // Mendapatkan alamat pengguna berdasarkan lokasi yang diperoleh
-                val geocoder = Geocoder(requireContext(), Locale.getDefault())
-
-                val addresses = geocoder.getFromLocation(
-                    location?.latitude ?: 0.0,
-                    location?.longitude ?: 0.0,
-                    1
-                )
-                // Mengambil alamat dari objek Address dan menampilkannya pada TextView
-                val address: String? = addresses!![0].getAddressLine(0)
-                val city: String? = addresses[0].locality
-                val state: String? = addresses[0].adminArea
-                val country: String? = addresses[0].countryName
-                val postalCode: String? = addresses[0].postalCode
-                val knownName: String? = addresses[0].featureName
-
-                binding.currentLocation.text =
-                    "$address"
-            }
-    }
-
     private fun isLocationPermissionGranted(): Boolean {
         return ContextCompat.checkSelfPermission(
             requireActivity(),
@@ -498,7 +502,6 @@
             }
         }
 
-
     @RequiresApi(Build.VERSION_CODES.O)
     fun timeRun() {
 
@@ -526,12 +529,6 @@
                 val formattedDateJam = sdfJam.format(Date(timestamp))
                 val formattedDateMenit = sdfMenit.format(Date(timestamp))
                 val formattedDateDetik = sdfDetik.format(Date(timestamp))
-//                Log.d("run jam", "Formatted date with system timezone: $formattedDate")
-
-//                val currentTime = System.currentTimeMillis()
-//                val seconds = (currentTime / 1000) % 60
-//                val minutes = (currentTime / (1000 * 60)) % 60
-//                val hours = (currentTime / (1000 * 60 * 60)) % 24
                 binding.tvTime.text =
                     "$formattedDateJam : $formattedDateMenit : $formattedDateDetik"
 
@@ -546,50 +543,6 @@
         }
     }
 
-    fun cekGPS() {
-        // Cek apakah GPS sedang aktif
-        val isGpsEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)
-        if (!isGpsEnabled) {
-            // GPS tidak aktif, tampilkan dialog untuk meminta pengguna mengaktifkannya
-            val builder = AlertDialog.Builder(requireContext())
-            builder.setMessage("GPS tidak aktif, aktifkan GPS?")
-                .setCancelable(false)
-                .setPositiveButton("Ya") { _, _ ->
-                    startActivity(Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS))
-                    enableAbsen()
-                }
-                .setNegativeButton("Tidak") { dialog, _ ->
-                    disableAbsen()
-                    dialog.cancel()
-                }
-            val alert = builder.create()
-            alert.show()
-        }
-    }
-
-
-    fun mematikanGPS() {
-        val locationManager =
-            requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager
-        locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)?.let { isGPSOn ->
-            if (isGPSOn) {
-                val intent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)
-                startActivity(intent)
-            }
-        }
-    }
-
-    fun menyalakanGPS() {
-        val locationManager =
-            requireActivity().getSystemService(Context.LOCATION_SERVICE) as LocationManager
-        locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)?.let { isGPSOn ->
-            if (!isGPSOn) {
-                val intent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)
-                startActivity(intent)
-            }
-        }
-    }
-
     fun enableAbsen() {
         binding.imgFinger.background = resources.getDrawable(R.color._danger)
         binding.btnAbsen.isClickable = true
@@ -600,16 +553,6 @@
         binding.btnAbsen.isClickable = false
     }
 
-    override fun onResume() {
-        super.onResume()
-        handler.postDelayed(runnable, 0)
-    }
-
-    override fun onPause() {
-        super.onPause()
-        handler.removeCallbacks(runnable)
-    }
-
     private fun runLoading() {
         binding.searchLocationLoading.visibility = View.VISIBLE
     }
@@ -619,21 +562,4 @@
         binding.searchLocationLoading.cancelAnimation()
     }
 
-//    override fun onConnectionAvailable() {
-//        super.onConnectionAvailable()
-//        binding.apply {
-//            toolbar.toolbar.visibility = View.GONE
-//            rcycleview.visibility = View.VISIBLE
-//            noInternetConnection.ivNoConnection.visibility = View.GONE
-//        }
-//    }
-//
-//    override fun onConnectionLost() {
-//        super.onConnectionLost()
-//        binding.apply {
-////            toolbar.toolbar.visibility = View.GONE
-//            rcycleview.visibility = View.GONE
-//            noInternetConnection.ivNoConnection.visibility = View.VISIBLE
-//        }
-//    }
 }
Index: app/src/main/java/com/infinity/dsmabsen/ui/fragment/FormPerizinanFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.ui.fragment\r\n\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Bitmap\r\nimport android.graphics.drawable.BitmapDrawable\r\nimport android.os.Bundle\r\nimport android.provider.MediaStore\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.MenuInflater\r\nimport android.view.View\r\nimport android.widget.AdapterView\r\nimport android.widget.Toast\r\nimport androidx.activity.result.contract.ActivityResultContracts\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.google.android.material.datepicker.MaterialDatePicker\r\nimport com.infinity.dsmabsen.R\r\nimport com.infinity.dsmabsen.adapter.SpinnerAdapter\r\nimport com.infinity.dsmabsen.databinding.FragmentFormPerizinanBinding\r\nimport com.infinity.dsmabsen.helper.AlertDialogHelper\r\nimport com.infinity.dsmabsen.helper.handleApiError\r\nimport com.infinity.dsmabsen.model.DataX\r\nimport com.infinity.dsmabsen.model.DataXXXXXXXXXXXXX\r\nimport com.infinity.dsmabsen.repository.NetworkResult\r\nimport com.infinity.dsmabsen.ui.activity.MainActivity\r\nimport com.infinity.dsmabsen.ui.viewModel.PerizinanViewModel\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport io.paperdb.Paper\r\nimport okhttp3.MediaType.Companion.toMediaTypeOrNull\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody.Companion.toRequestBody\r\nimport java.io.ByteArrayOutputStream\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n@AndroidEntryPoint\r\nclass FormPerizinanFragment :\r\n    BaseFragment<FragmentFormPerizinanBinding>(FragmentFormPerizinanBinding::inflate) {\r\n    private val viewModel: PerizinanViewModel by viewModels()\r\n    val savedUser = Paper.book().read<DataX>(\"user\")\r\n    private var kode_perizinan: String? = null\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        setHasOptionsMenu(true)\r\n//        registerResult()\r\n        hideBottomNavigation()\r\n        val myActivities = activity as MainActivity\r\n        myActivities.hideMyBottomNav()\r\n        setupToolbar(\"Ajukan Perizinan\")\r\n\r\n        toolbar.setOnMenuItemClickListener { menuItem ->\r\n            when (menuItem.itemId) {\r\n                R.id.save -> {\r\n                    savePerizinan(savedUser)\r\n\r\n                    true\r\n                }\r\n\r\n                else -> false\r\n            }\r\n        }\r\n\r\n        with(binding) {\r\n\r\n            pickImage.setOnClickListener {\r\n                uploadFiles()\r\n            }\r\n            etTanggalMulai.setOnClickListener {\r\n                getCalendarStart()\r\n            }\r\n\r\n            etTanggalSelesai.setOnClickListener {\r\n                getCalendarEnd()\r\n            }\r\n            viewModel.requestgetSpinner()\r\n            viewModel.getSpinnerLiveData.observe(viewLifecycleOwner) {\r\n                when (it) {\r\n                    is NetworkResult.Success -> {\r\n                        val data = it.data!!\r\n                        val status = data.status\r\n                        binding.apply {\r\n                            loadingInclude.loading.visibility = View.GONE\r\n                            scrollView.visibility = View.VISIBLE\r\n                        }\r\n                        if (status) {\r\n                            val list = data.data.toMutableList()\r\n                            val defaultItem = DataXXXXXXXXXXXXX(\r\n                                \"\",\r\n                                \"pilih jenis perizinan\",\r\n                                0\r\n                            )\r\n\r\n                            list += listOf(defaultItem)\r\n\r\n                            val spinnerAdapter = SpinnerAdapter(requireContext(), list)\r\n                            spinnerJenisIzin.adapter = spinnerAdapter\r\n                            spinnerJenisIzin.onItemSelectedListener =\r\n                                object : AdapterView.OnItemSelectedListener {\r\n                                    override fun onItemSelected(\r\n                                        parent: AdapterView<*>?,\r\n                                        view: View?,\r\n                                        position: Int,\r\n                                        id: Long\r\n                                    ) {\r\n                                        val clickedItem: DataXXXXXXXXXXXXX =\r\n                                            parent?.getItemAtPosition(position) as DataXXXXXXXXXXXXX\r\n                                        val idSpinner = clickedItem.kode_cuti\r\n                                        kode_perizinan = idSpinner\r\n                                        Log.d(\"idSpinner\", idSpinner)\r\n                                    }\r\n\r\n                                    override fun onNothingSelected(p0: AdapterView<*>?) {\r\n                                        Log.d(\"nothing\", \"No\")\r\n                                    }\r\n\r\n                                }\r\n                        } else {\r\n                        }\r\n                    }\r\n\r\n                    is NetworkResult.Loading -> {\r\n                        binding.apply {\r\n                            loadingInclude.loading.visibility = View.VISIBLE\r\n                            scrollView.visibility = View.GONE\r\n                        }\r\n                    }\r\n\r\n                    is NetworkResult.Error -> {\r\n                        binding.apply {\r\n                            loadingInclude.loading.visibility = View.GONE\r\n                            scrollView.visibility = View.VISIBLE\r\n                        }\r\n                        handleApiError(it.message)\r\n                    }\r\n\r\n                    else -> \"\"\r\n                }\r\n            }\r\n\r\n        }\r\n        toolbar.setOnMenuItemClickListener { menuItem ->\r\n            var i = 0\r\n            when (menuItem.itemId) {\r\n                R.id.save -> {\r\n\r\n                    if (binding.etTanggalMulai.text.isEmpty()) {\r\n                        binding.etTanggalMulai.error = \"Harap isi bidang ini!!\"\r\n                        binding.etTanggalMulai.requestFocus()\r\n                        i++\r\n\r\n                    }\r\n                    if (binding.etTanggalSelesai.text.isEmpty()) {\r\n                        binding.etTanggalSelesai.error = \"Harap isi bidang ini!!\"\r\n                        binding.etTanggalSelesai.requestFocus()\r\n                        i++\r\n\r\n                    }\r\n                    if (binding.etKeterangan.text.isEmpty()) {\r\n                        binding.etKeterangan.error = \"Harap isi bidang ini!!\"\r\n                        binding.etKeterangan.requestFocus()\r\n                        i++\r\n                    }\r\n                    if (i == 0) {\r\n                        savePerizinan(savedUser)\r\n                    }\r\n                    true\r\n                }\r\n\r\n                else -> false\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun uploadFiles() {\r\n        val pictureDialog = AlertDialog.Builder(requireContext())\r\n        pictureDialog.setTitle(\"Select Action\")\r\n        val pictureDialogItems = arrayOf(\"Take Photo With Camera\", \"Select Photo From Gallery\")\r\n        pictureDialog.setItems(pictureDialogItems) { _, which ->\r\n            when (which) {\r\n                0 -> takePictureFromCamera()\r\n                1 -> choosePictureFromGallery()\r\n            }\r\n        }\r\n        pictureDialog.show()\r\n    }\r\n\r\n    private fun takePictureFromCamera() {\r\n        val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\r\n        putPhoto.launch(intent)\r\n    }\r\n\r\n    private val putPhoto =\r\n        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {\r\n            if (it.resultCode == AppCompatActivity.RESULT_OK) {\r\n                val bitmap = it?.data?.extras?.get(\"data\") as Bitmap\r\n                binding.uploadFile.setImageBitmap(bitmap)\r\n                binding.uploadFile.visibility = View.VISIBLE\r\n            } else if (it == null) {\r\n                binding.uploadFile.visibility = View.GONE\r\n            } else {\r\n                Log.d(\"TAG\", \"Task Cancelled\")\r\n//                Toast.makeText(this, \"Task Cancelled\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n    private fun choosePictureFromGallery() {\r\n        val intent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)\r\n        putImage.launch(intent)\r\n    }\r\n\r\n    private val putImage =\r\n        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {\r\n            if (it.resultCode == Activity.RESULT_OK) {\r\n                try {\r\n                    val imageUri = it?.data?.data\r\n                    binding.uploadFile.setImageURI(imageUri)\r\n                    binding.uploadFile.visibility = View.VISIBLE\r\n                } catch (e: Exception) {\r\n                    Toast.makeText(requireContext(), \"Gagal memuat gambar\", Toast.LENGTH_SHORT)\r\n                        .show()\r\n                }\r\n            }\r\n        }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\r\n        inflater.inflate(R.menu.toolbar_menu, menu)\r\n        val menuSave = menu.findItem(R.id.save)\r\n        val menuPlus = menu.findItem(R.id.add)\r\n        val menuLogout = menu.findItem(R.id.logout)\r\n        val menuScan = menu.findItem(R.id.scan)\r\n\r\n        menuScan?.isVisible = false\r\n        menuLogout.isVisible = false\r\n        menuSave?.isVisible = true // menyembunyikan menu tertentu\r\n        menuPlus?.isVisible = false // menyembunyikan menu tertentu\r\n\r\n    }\r\n\r\n    private fun getCalendarEnd() {\r\n        val datePicker = MaterialDatePicker.Builder\r\n            .datePicker()\r\n            .setTitleText(\"\")\r\n            .build()\r\n        datePicker.show(childFragmentManager, \"DatePicker\")\r\n\r\n        datePicker.addOnPositiveButtonClickListener {\r\n            val dateFormatter = SimpleDateFormat(\"dd-MM-yyyy\")\r\n            val date = dateFormatter.format(Date(it))\r\n            binding.etTanggalSelesai.text = date\r\n\r\n        }\r\n\r\n        datePicker.addOnNegativeButtonClickListener {\r\n            Log.d(\"TAG\", \"getCalendarEnd: negetive button\")\r\n        }\r\n\r\n        datePicker.addOnCancelListener {\r\n            Log.d(\"TAG\", \"getCalendarEnd: calnceled\")\r\n        }\r\n    }\r\n\r\n    private fun getCalendarStart() {\r\n        val datePicker = MaterialDatePicker.Builder\r\n            .datePicker()\r\n            .setTitleText(\"\")\r\n            .build()\r\n        datePicker.show(childFragmentManager, \"DatePicker\")\r\n\r\n        datePicker.addOnPositiveButtonClickListener {\r\n            val dateFormatter = SimpleDateFormat(\"dd-MM-yyyy\")\r\n            val date = dateFormatter.format(Date(it))\r\n            binding.etTanggalMulai.text = date\r\n\r\n        }\r\n\r\n        datePicker.addOnNegativeButtonClickListener {\r\n            Log.d(\"TAG\", \"getCalendarStart:Negative button\")\r\n        }\r\n\r\n        datePicker.addOnCancelListener {\r\n            Log.d(\"TAG\", \"getCalendarStart:Cancel button\")\r\n        }\r\n\r\n    }\r\n\r\n    private fun savePerizinan(savedUser: DataX?) {\r\n        val builder = AlertDialog.Builder(requireContext())\r\n        builder.setMessage(\"Apakah anda yakin ingin mengajukan Perizinan?\")\r\n            .setPositiveButton(\"Ya\") { dialog, _ ->\r\n                val nipRequestBody = MultipartBody.Part.createFormData(\"nip\", savedUser!!.nip)\r\n                val kodePerizinanRequestBody =\r\n                    MultipartBody.Part.createFormData(\"kode_cuti\", kode_perizinan!!)\r\n                val tanggalMulaiRequestBody =\r\n                    MultipartBody.Part.createFormData(\r\n                        \"tanggal_mulai\",\r\n                        binding.etTanggalMulai.text.toString()\r\n                    )\r\n                val tanggalSelesaiRequestBody =\r\n                    MultipartBody.Part.createFormData(\r\n                        \"tanggal_selesai\",\r\n                        binding.etTanggalSelesai.text.toString()\r\n                    )\r\n                val keteranganRequestBody =\r\n                    MultipartBody.Part.createFormData(\r\n                        \"keterangan\",\r\n                        binding.etKeterangan.text.toString()\r\n                    )\r\n\r\n                val bitmap: Bitmap = (binding.uploadFile.drawable as BitmapDrawable).bitmap\r\n                val photo = uriToMultipartBody(bitmap)\r\n                Log.d(\"sendData\", savedUser!!.nip)\r\n                viewModel.requestSendPermission(\r\n                    nipRequestBody.body,\r\n                    kodePerizinanRequestBody.body,\r\n                    tanggalMulaiRequestBody.body,\r\n                    tanggalSelesaiRequestBody.body,\r\n                    photo,\r\n                    keteranganRequestBody.body\r\n                )\r\n\r\n                viewModel.sendPermissionLiveData.observe(viewLifecycleOwner) {\r\n                    when (it) {\r\n                        is NetworkResult.Success -> {\r\n                            binding.apply {\r\n                                loadingInclude.loading.visibility = View.GONE\r\n                                scrollView.visibility = View.VISIBLE\r\n                            }\r\n                            val response = it.data!!\r\n                            val status = response.data.status\r\n                            val messages = response.data.messages\r\n                            if (status) {\r\n                                val alertDialogHelper = AlertDialogHelper(requireContext())\r\n                                alertDialogHelper.showAlertDialog(\"\", messages)\r\n                                findNavController().popBackStack()\r\n//                                findNavController().navigate(R.id.action_formPerizinanFragment_to_menuPerizinanFragment)\r\n                            }\r\n                            val alertDialogHelper = AlertDialogHelper(requireContext())\r\n                            alertDialogHelper.showAlertDialog(\"\", messages)\r\n                            findNavController().popBackStack()\r\n//                            findNavController().navigate(R.id.action_formPerizinanFragment_to_menuPerizinanFragment)\r\n\r\n\r\n//                            Log.d(\"pesan\", messages)\r\n//                                    requireActivity().onBackPressed()\r\n                        }\r\n\r\n                        is NetworkResult.Loading -> {\r\n                            binding.apply {\r\n                                loadingInclude.loading.visibility = View.VISIBLE\r\n                                scrollView.visibility = View.GONE\r\n                            }\r\n                        }\r\n\r\n                        is NetworkResult.Error -> {\r\n                            binding.apply {\r\n                                loadingInclude.loading.visibility = View.GONE\r\n                                scrollView.visibility = View.VISIBLE\r\n                            }\r\n                            handleApiError(it.message)\r\n                        }\r\n                    }\r\n\r\n                }\r\n                Log.d(\"Uri\", \"null uri $bitmap\")\r\n            }\r\n\r\n            .setNegativeButton(\"tidak\")\r\n            { dialog, _ ->\r\n                dialog.cancel()\r\n            }\r\n\r\n        val alert = builder.create()\r\n        alert.show()\r\n\r\n\r\n    }\r\n\r\n    private fun uriToMultipartBody(bitmap: Bitmap): MultipartBody.Part {\r\n        val byteArrayOutputStream = ByteArrayOutputStream()\r\n        bitmap.compress(Bitmap.CompressFormat.PNG, 100, byteArrayOutputStream)\r\n        val byteArray = byteArrayOutputStream.toByteArray()\r\n        val requestFile = byteArray.toRequestBody(\"image/png\".toMediaTypeOrNull())\r\n        return MultipartBody.Part.createFormData(\"file\", \"image.png\", requestFile)\r\n    }\r\n\r\n    override fun onConnectionAvailable() {\r\n        super.onConnectionAvailable()\r\n        binding.apply {\r\n            toolbar.toolbar.visibility = View.VISIBLE\r\n            scrollView.visibility = View.VISIBLE\r\n            noInternetConnection.ivNoConnection.visibility = View.GONE\r\n        }\r\n    }\r\n\r\n    override fun onConnectionLost() {\r\n        super.onConnectionLost()\r\n        binding.apply {\r\n            toolbar.toolbar.visibility = View.GONE\r\n            scrollView.visibility = View.GONE\r\n            noInternetConnection.ivNoConnection.visibility = View.VISIBLE\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        Log.d(\"TAG\", \"onResume: \")\r\n        hideBottomNavigation()\r\n        val myActivities = activity as MainActivity\r\n        myActivities.hideMyBottomNav()\r\n        super.onResume()\r\n    }\r\n\r\n    override fun onStart() {\r\n        Log.d(\"TAG\", \"onStart: \")\r\n        hideBottomNavigation()\r\n        val myActivities = activity as MainActivity\r\n        myActivities.hideMyBottomNav()\r\n        super.onStart()\r\n    }\r\n\r\n    override fun onPause() {\r\n        Log.d(\"TAG\", \"onPause: \")\r\n        hideBottomNavigation()\r\n        val myActivities = activity as MainActivity\r\n        myActivities.hideMyBottomNav()\r\n        super.onPause()\r\n    }\r\n\r\n    override fun onStop() {\r\n        Log.d(\"TAG\", \"onStop: \")\r\n        hideBottomNavigation()\r\n        val myActivities = activity as MainActivity\r\n        myActivities.hideMyBottomNav()\r\n        super.onStop()\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        Log.d(\"TAG\", \"onDestroyView: \")\r\n//        showBottomNavigation()\r\n        super.onDestroyView()\r\n    }\r\n\r\n    override fun onDetach() {\r\n        super.onDetach()\r\n        Log.d(\"TAG\", \"onDetach: \")\r\n    }\r\n\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n        Log.d(\"TAG\", \"onAttach: \")\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/FormPerizinanFragment.kt b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/FormPerizinanFragment.kt
--- a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/FormPerizinanFragment.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/FormPerizinanFragment.kt	
@@ -90,13 +90,6 @@
                         }
                         if (status) {
                             val list = data.data.toMutableList()
-                            val defaultItem = DataXXXXXXXXXXXXX(
-                                "",
-                                "pilih jenis perizinan",
-                                0
-                            )
-
-                            list += listOf(defaultItem)
 
                             val spinnerAdapter = SpinnerAdapter(requireContext(), list)
                             spinnerJenisIzin.adapter = spinnerAdapter
Index: app/src/main/res/layout/fragment_attendance.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@drawable/gradiend_background\"\r\n    tools:context=\".ui.fragment.AttendanceFragment\">\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/rcycleview\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:padding=\"@dimen/_20sdp\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/userInfo\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingBottom=\"@dimen/_15sdp\"\r\n                app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n                <include\r\n                    android:id=\"@+id/toolbar_user\"\r\n                    layout=\"@layout/toolbsr_user\"/>\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n            <com.google.android.material.card.MaterialCardView\r\n                android:backgroundTint=\"@color/white\"\r\n                android:id=\"@+id/materialCardView19\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:padding=\"@dimen/_20sdp\"\r\n                android:visibility=\"visible\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/userInfo\"\r\n                tools:layout_editor_absoluteX=\"0dp\">\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:padding=\"@dimen/_15sdp\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/imageView22\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:src=\"@drawable/ic_circle_location\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\"\r\n                        tools:layout_editor_absoluteX=\"19dp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/lattitudeUser\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/_10sdp\"\r\n                        android:background=\"@drawable/bg_blue_text_rounded\"\r\n                        android:fontFamily=\"@font/poppins_medium\"\r\n                        android:paddingHorizontal=\"@dimen/_19sdp\"\r\n                        android:paddingVertical=\"@dimen/_3sdp\"\r\n                        android:text=\"Lat : -\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"@dimen/_9ssp\"\r\n                        app:layout_constraintEnd_toStartOf=\"@+id/longitudeUser\"\r\n                        app:layout_constraintHorizontal_bias=\"0.5\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/imageView22\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/longitudeUser\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/_10sdp\"\r\n                        android:background=\"@drawable/bg_pink_text_rounded\"\r\n                        android:fontFamily=\"@font/poppins_medium\"\r\n                        android:paddingHorizontal=\"@dimen/_19sdp\"\r\n                        android:paddingVertical=\"@dimen/_3sdp\"\r\n                        android:text=\"Lat : -\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"@dimen/_9ssp\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintHorizontal_bias=\"0.5\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/lattitudeUser\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/imageView22\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/currentLocation\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/_10sdp\"\r\n                        android:fontFamily=\"@font/poppins_light\"\r\n                        android:text=\"Lokasi \"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"@dimen/_10ssp\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/lattitudeUser\"\r\n                        tools:layout_editor_absoluteX=\"144dp\" />\r\n\r\n                    <com.airbnb.lottie.LottieAnimationView\r\n                        app:layout_constraintTop_toTopOf=\"parent\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        android:id=\"@+id/search_location_loading\"\r\n                        app:lottie_loop=\"true\"\r\n                        app:lottie_autoPlay=\"true\"\r\n                        android:background=\"@color/white\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"@dimen/_200sdp\"\r\n                        app:lottie_rawRes=\"@raw/search_location_animate\" />\r\n\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n            </com.google.android.material.card.MaterialCardView>\r\n\r\n            <com.google.android.material.card.MaterialCardView\r\n                android:backgroundTint=\"@color/white\"\r\n                android:id=\"@+id/materialCardView20\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"@dimen/_15sdp\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/materialCardView19\"\r\n                tools:layout_editor_absoluteX=\"26dp\">\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:padding=\"@dimen/_10sdp\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_time\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:fontFamily=\"@font/poppins_bold\"\r\n                        android:text=\"-:-:-\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"@dimen/_40ssp\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\"\r\n                        tools:layout_editor_absoluteX=\"13dp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_hari\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:background=\"@drawable/gradiend_background\"\r\n                        android:paddingHorizontal=\"@dimen/_12sdp\"\r\n                        android:text=\"-\"\r\n                        android:fontFamily=\"@font/poppins_bold\"\r\n                        android:textColor=\"@color/_dark\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintEnd_toStartOf=\"@+id/tv_bulan\"\r\n                        app:layout_constraintHorizontal_bias=\"0.5\"\r\n                        app:layout_constraintHorizontal_chainStyle=\"packed\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/tv_time\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_bulan\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/_3sdp\"\r\n                        android:background=\"@drawable/gradiend_background\"\r\n                        android:paddingHorizontal=\"@dimen/_12sdp\"\r\n                        android:text=\"-\"\r\n                        android:fontFamily=\"@font/poppins_bold\"\r\n                        android:textColor=\"@color/_dark\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintEnd_toStartOf=\"@+id/tv_tahun\"\r\n                        app:layout_constraintHorizontal_bias=\"0.5\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/tv_hari\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/tv_time\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_tahun\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:background=\"@drawable/gradiend_background\"\r\n                        android:paddingHorizontal=\"@dimen/_12sdp\"\r\n                        android:text=\"-\"\r\n                        android:fontFamily=\"@font/poppins_bold\"\r\n                        android:textColor=\"@color/_dark\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintHorizontal_bias=\"0.5\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/tv_bulan\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/tv_time\" />\r\n\r\n\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n            </com.google.android.material.card.MaterialCardView>\r\n\r\n            <com.google.android.material.card.MaterialCardView\r\n                android:id=\"@+id/materialCardView21\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"@dimen/_15sdp\"\r\n                android:visibility=\"gone\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/materialCardView20\"\r\n                tools:layout_editor_absoluteX=\"26dp\">\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                    android:id=\"@+id/informationLayout\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@color/_danger\"\r\n                    android:paddingHorizontal=\"@dimen/_40sdp\"\r\n                    android:paddingVertical=\"@dimen/_7sdp\"\r\n                    android:visibility=\"invisible\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/notificationUser\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:fontFamily=\"@font/poppins_light\"\r\n                        android:text=\"Gagal Absen, lokasi anda tidak di temukan,\r\nSilahkan Hubungi Admin\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"@color/white\"\r\n                        android:textSize=\"@dimen/_10ssp\"\r\n                        android:visibility=\"gone\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\"\r\n                        tools:layout_editor_absoluteX=\"52dp\" />\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n            </com.google.android.material.card.MaterialCardView>\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:layout_marginTop=\"@dimen/_10sdp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/materialCardView21\"\r\n                tools:layout_editor_absoluteX=\"26dp\">\r\n\r\n                <com.google.android.material.card.MaterialCardView\r\n                    android:id=\"@+id/btn_refresh\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/btn_absen\"\r\n                    app:layout_constraintHorizontal_bias=\"0.5\"\r\n                    android:layout_marginEnd=\"@dimen/_5sdp\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:background=\"@color/_info\"\r\n                        android:paddingVertical=\"@dimen/_10sdp\"\r\n                        android:src=\"@drawable/refresh_locate\" />\r\n\r\n                </com.google.android.material.card.MaterialCardView>\r\n\r\n                <com.google.android.material.card.MaterialCardView\r\n                    android:id=\"@+id/btn_absen\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"@dimen/_5sdp\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintHorizontal_bias=\"0.5\"\r\n                    app:layout_constraintStart_toEndOf=\"@+id/btn_refresh\"\r\n                    android:orientation=\"vertical\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/img_finger\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:background=\"@color/_danger\"\r\n                        android:paddingVertical=\"@dimen/_10sdp\"\r\n                        android:src=\"@drawable/finger_absen\" />\r\n\r\n                </com.google.android.material.card.MaterialCardView>\r\n\r\n                <com.google.android.material.card.MaterialCardView\r\n                    android:id=\"@+id/btn_scan_wajah\"\r\n                    android:visibility=\"gone\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"@dimen/_5sdp\"\r\n                    android:layout_marginTop=\"@dimen/_20sdp\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintHorizontal_bias=\"0.5\"\r\n                    app:layout_constraintStart_toEndOf=\"@+id/btn_refresh\"\r\n                    android:orientation=\"vertical\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/btn_absen\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/img_scan_wajah\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:background=\"@color/_success\"\r\n                        android:paddingVertical=\"@dimen/_10sdp\"\r\n                        android:src=\"@drawable/finger_absen\" />\r\n\r\n                </com.google.android.material.card.MaterialCardView>\r\n\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n    </ScrollView>\r\n    <include\r\n        android:visibility=\"gone\"\r\n        android:id=\"@+id/noInternetConnection\"\r\n        layout=\"@layout/fake\"\r\n        />\r\n    <include\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:id=\"@+id/loadingInclude\"\r\n        layout=\"@layout/loading\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_attendance.xml b/app/src/main/res/layout/fragment_attendance.xml
--- a/app/src/main/res/layout/fragment_attendance.xml	
+++ b/app/src/main/res/layout/fragment_attendance.xml	
@@ -234,7 +234,7 @@
                 </androidx.constraintlayout.widget.ConstraintLayout>
             </com.google.android.material.card.MaterialCardView>
 
-            <androidx.constraintlayout.widget.ConstraintLayout
+            <LinearLayout
                 android:layout_marginTop="@dimen/_10sdp"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
@@ -242,8 +242,30 @@
                 tools:layout_editor_absoluteX="26dp">
 
                 <com.google.android.material.card.MaterialCardView
+                    android:visibility="visible"
                     android:id="@+id/btn_refresh"
                     android:layout_width="0dp"
+                    android:layout_weight="1"
+                    android:layout_height="wrap_content"
+                    app:layout_constraintEnd_toStartOf="@+id/btn_absen"
+                    app:layout_constraintHorizontal_bias="0.5"
+                    android:layout_marginEnd="@dimen/_5sdp"
+                    app:layout_constraintStart_toStartOf="parent"
+                    app:layout_constraintTop_toTopOf="parent">
+
+                    <ImageView
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:background="@color/_info"
+                        android:paddingVertical="@dimen/_10sdp"
+                        android:src="@drawable/refresh_locate" />
+
+                </com.google.android.material.card.MaterialCardView>
+                <com.google.android.material.card.MaterialCardView
+                    android:id="@+id/btn_activeGPS"
+                    android:visibility="gone"
+                    android:layout_width="0dp"
+                    android:layout_weight="1"
                     android:layout_height="wrap_content"
                     app:layout_constraintEnd_toStartOf="@+id/btn_absen"
                     app:layout_constraintHorizontal_bias="0.5"
@@ -259,10 +281,10 @@
                         android:src="@drawable/refresh_locate" />
 
                 </com.google.android.material.card.MaterialCardView>
-
                 <com.google.android.material.card.MaterialCardView
                     android:id="@+id/btn_absen"
                     android:layout_width="0dp"
+                    android:layout_weight="1"
                     android:layout_height="wrap_content"
                     android:layout_marginStart="@dimen/_5sdp"
                     app:layout_constraintEnd_toEndOf="parent"
@@ -304,7 +326,7 @@
 
                 </com.google.android.material.card.MaterialCardView>
 
-            </androidx.constraintlayout.widget.ConstraintLayout>
+            </LinearLayout>
 
 
 
Index: app/src/main/java/com/infinity/dsmabsen/ui/fragment/ProfileFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.infinity.dsmabsen.ui.fragment\r\n\r\nimport android.content.Intent\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.Menu\r\nimport android.view.MenuInflater\r\nimport android.view.View\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport androidx.core.view.isVisible\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.bumptech.glide.Glide\r\nimport com.infinity.dsmabsen.R\r\nimport com.infinity.dsmabsen.databinding.FragmentProfileBinding\r\nimport com.infinity.dsmabsen.databinding.LayoutWarningDailogBinding\r\nimport com.infinity.dsmabsen.helper.TokenManager\r\nimport com.infinity.dsmabsen.helper.handleApiError\r\nimport com.infinity.dsmabsen.model.DataX\r\nimport com.infinity.dsmabsen.model.RequestNip\r\nimport com.infinity.dsmabsen.repository.NetworkResult\r\nimport com.infinity.dsmabsen.ui.activity.LoginActivity\r\nimport com.infinity.dsmabsen.ui.viewModel.AuthViewModel\r\nimport com.infinity.dsmabsen.ui.viewModel.UserProfileViewModel\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport io.paperdb.Paper\r\nimport javax.inject.Inject\r\n\r\n\r\n@AndroidEntryPoint\r\nclass ProfileFragment : BaseFragment<FragmentProfileBinding>(FragmentProfileBinding::inflate) {\r\n\r\n    private val viewModel: UserProfileViewModel by viewModels()\r\n    private val viewModels: AuthViewModel by viewModels()\r\n\r\n    @Inject\r\n    lateinit var tokenManager: TokenManager\r\n    val savedUser = Paper.book().read<DataX>(\"user\")\r\n    private val nipUser = savedUser!!.nip\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        with(binding) {\r\n            setHasOptionsMenu(true)\r\n\r\n            setupToolbar(\"Profile\")\r\n            rvProfileLengkap.setOnClickListener {\r\n                findNavController().navigate(R.id.action_profileFragment_to_allProfileFragment)\r\n            }\r\n            logout.setOnClickListener {\r\n//                logout(nipUser)\r\n                loginOut()\r\n            }\r\n        }\r\n\r\n        viewModel.profileUserRequest(savedUser!!.nip)\r\n        viewModel.profileUserLivedata.observe(viewLifecycleOwner) {\r\n            when (it) {\r\n                is NetworkResult.Success -> {\r\n                    with(binding) {\r\n                        val data = it.data!!\r\n                        binding.apply {\r\n                            loadingInclude.loading.visibility = View.GONE\r\n                            constraintLayout3.visibility = View.VISIBLE\r\n                        }\r\n                        if (data.status) {\r\n                            Glide.with(requireContext())\r\n                                .load(data.data.foto)\r\n                                .into(civProfile)\r\n                        } else {\r\n                            Toast.makeText(requireContext(), \"error in here\", Toast.LENGTH_SHORT)\r\n                                .show()\r\n                        }\r\n\r\n                        tvNamaProfile.text = data.data.nama\r\n                        tvKontrak.text = data.data.status_pegawai\r\n                        tvSurveyor.text = data.data.jabatan\r\n                        tvDivisi.text = data.data.divisi\r\n                    }\r\n                }\r\n\r\n                is NetworkResult.Loading -> {\r\n                    binding.apply {\r\n                        loadingInclude.loading.visibility = View.VISIBLE\r\n                        constraintLayout3.visibility = View.GONE\r\n                    }\r\n                }\r\n\r\n                is NetworkResult.Error -> {\r\n                    binding.apply {\r\n                        loadingInclude.loading.visibility = View.GONE\r\n                        constraintLayout3.visibility = View.VISIBLE\r\n                    }\r\n                    handleApiError(it.message)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun loginOut() {\r\n        val dialogBinding = LayoutWarningDailogBinding.inflate(layoutInflater)\r\n\r\n        val alertDialog = AlertDialog.Builder(requireContext(), R.style.AlertDialogTheme)\r\n            .setView(dialogBinding.root)\r\n            .create()\r\n\r\n        dialogBinding.textTitle.text = \"Konfirmasi Keluar\"\r\n        dialogBinding.textMessage.text = \"Anda yakin Ingin keluar dari aplikasi\"\r\n        dialogBinding.buttonYes.text = \"Ya\"\r\n        dialogBinding.buttonNo.text = \"Batal\"\r\n        dialogBinding.imageIcon.setImageResource(R.drawable.ic_baseline_warning_24)\r\n\r\n        dialogBinding.buttonYes.setOnClickListener {\r\n            alertDialog.dismiss()\r\n            viewModels.requestLogout(nipUser)\r\n            viewModels.logOutLiveData.observe(viewLifecycleOwner) {\r\n                binding.loadingInclude.loading.visibility = View.GONE\r\n                when (it) {\r\n                    is NetworkResult.Success -> {\r\n                        val data = it.data!!\r\n                        binding.loadingInclude.loading.visibility = View.GONE\r\n                        binding.constraintLayout3.isVisible = true\r\n                        requireActivity().startActivity(\r\n                            Intent(\r\n                                requireActivity(),\r\n                                LoginActivity::class.java\r\n                            )\r\n                        )\r\n                        Paper.book().delete(\"user\")\r\n                        tokenManager.deleteToken()\r\n                    }\r\n\r\n                    is NetworkResult.Loading -> {\r\n                        binding.constraintLayout3.isVisible = false\r\n                        binding.loadingInclude.loading.visibility = View.GONE\r\n                    }\r\n\r\n                    is NetworkResult.Error -> {\r\n                        handleApiError(it.message)\r\n                        Log.d(\"TAG\", it.message.toString())\r\n                        binding.loadingInclude.loading.visibility = View.GONE\r\n                        //                            Toast.makeText(requireContext(), it.message.toString(), Toast.LENGTH_LONG).show()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        dialogBinding.buttonNo.setOnClickListener {\r\n            alertDialog.dismiss()\r\n        }\r\n\r\n        if (alertDialog.window != null) {\r\n            alertDialog.window!!.setBackgroundDrawable(ColorDrawable(0))\r\n        }\r\n\r\n        alertDialog.show()\r\n    }\r\n\r\n    private fun logout(nipUser: String) {\r\n        AlertDialog.Builder(requireContext())\r\n            .setTitle(\"LogOut\")\r\n            .setMessage(\"Anda Yakin ingin logout\")\r\n            .setPositiveButton(\"Ya\") { _, _ ->\r\n                val nips = RequestNip(\r\n                    nipUser\r\n                )\r\n\r\n//                Toast.makeText(requireContext(), \"$nips\", Toast.LENGTH_SHORT).show()\r\n\r\n            }\r\n            .setNegativeButton(\"Kembali\") { _, _ ->\r\n            }\r\n            .create().show()\r\n\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\r\n        inflater.inflate(R.menu.toolbar_menu, menu)\r\n        val menuSave = menu.findItem(R.id.save)\r\n        val menuPlus = menu.findItem(R.id.add)\r\n        val menuLogout = menu.findItem(R.id.logout)\r\n        val menuScan = menu.findItem(R.id.scan)\r\n\r\n        menuScan?.isVisible = false\r\n        menuLogout.isVisible = false\r\n        menuSave?.isVisible = false // menyembunyikan menu tertentu\r\n        menuPlus?.isVisible = false // menyembunyikan menu tertentu\r\n    }\r\n\r\n    override fun onConnectionAvailable() {\r\n        super.onConnectionAvailable()\r\n        binding.apply {\r\n            constraintLayout3.visibility = View.VISIBLE\r\n            noInternetConnection.ivNoConnection.visibility = View.GONE\r\n        }\r\n    }\r\n\r\n    override fun onConnectionLost() {\r\n        super.onConnectionLost()\r\n        binding.apply {\r\n            constraintLayout3.visibility = View.GONE\r\n            noInternetConnection.ivNoConnection.visibility = View.VISIBLE\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/ProfileFragment.kt b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/ProfileFragment.kt
--- a/app/src/main/java/com/infinity/dsmabsen/ui/fragment/ProfileFragment.kt	
+++ b/app/src/main/java/com/infinity/dsmabsen/ui/fragment/ProfileFragment.kt	
@@ -4,14 +4,11 @@
 import android.graphics.drawable.ColorDrawable
 import android.os.Bundle
 import android.util.Log
-import android.view.LayoutInflater
 import android.view.Menu
 import android.view.MenuInflater
 import android.view.View
-import android.widget.TextView
 import android.widget.Toast
 import androidx.appcompat.app.AlertDialog
-import androidx.constraintlayout.widget.ConstraintLayout
 import androidx.core.view.isVisible
 import androidx.fragment.app.viewModels
 import androidx.navigation.fragment.findNavController
@@ -22,7 +19,6 @@
 import com.infinity.dsmabsen.helper.TokenManager
 import com.infinity.dsmabsen.helper.handleApiError
 import com.infinity.dsmabsen.model.DataX
-import com.infinity.dsmabsen.model.RequestNip
 import com.infinity.dsmabsen.repository.NetworkResult
 import com.infinity.dsmabsen.ui.activity.LoginActivity
 import com.infinity.dsmabsen.ui.viewModel.AuthViewModel
@@ -122,7 +118,6 @@
                 binding.loadingInclude.loading.visibility = View.GONE
                 when (it) {
                     is NetworkResult.Success -> {
-                        val data = it.data!!
                         binding.loadingInclude.loading.visibility = View.GONE
                         binding.constraintLayout3.isVisible = true
                         requireActivity().startActivity(
@@ -161,25 +156,6 @@
         alertDialog.show()
     }
 
-    private fun logout(nipUser: String) {
-        AlertDialog.Builder(requireContext())
-            .setTitle("LogOut")
-            .setMessage("Anda Yakin ingin logout")
-            .setPositiveButton("Ya") { _, _ ->
-                val nips = RequestNip(
-                    nipUser
-                )
-
-//                Toast.makeText(requireContext(), "$nips", Toast.LENGTH_SHORT).show()
-
-            }
-            .setNegativeButton("Kembali") { _, _ ->
-            }
-            .create().show()
-
-
-    }
-
     override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {
         inflater.inflate(R.menu.toolbar_menu, menu)
         val menuSave = menu.findItem(R.id.save)
