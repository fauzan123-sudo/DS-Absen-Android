Index: app/src/main/java/com/example/dsmabsen/ui/fragment/BerandaFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.dsmabsen.ui.fragment\r\n\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.activity.OnBackPressedCallback\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.core.view.isVisible\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.bumptech.glide.Glide\r\nimport com.example.dsmabsen.R\r\nimport com.example.dsmabsen.databinding.FragmentBerandaBinding\r\nimport com.example.dsmabsen.helper.*\r\nimport com.example.dsmabsen.helper.Constans.IMAGE_URL\r\nimport com.example.dsmabsen.model.DataX\r\nimport com.example.dsmabsen.repository.NetworkResult\r\nimport com.example.dsmabsen.ui.viewModel.HomeViewModel\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport io.paperdb.Paper\r\nimport java.text.SimpleDateFormat\r\nimport java.time.LocalDate\r\nimport java.time.format.DateTimeFormatter\r\nimport java.time.format.TextStyle\r\nimport java.util.*\r\nimport javax.inject.Inject\r\n\r\n@AndroidEntryPoint\r\nclass BerandaFragment : BaseFragment<FragmentBerandaBinding>(FragmentBerandaBinding::inflate) {\r\n    private val viewModel: HomeViewModel by viewModels()\r\n    private val cacheManager = CacheManager()\r\n    private lateinit var customAnalogClock: CustomAnalogClock\r\n\r\n    private val handler = Handler()\r\n    private lateinit var runnable: Runnable\r\n\r\n    @Inject\r\n    lateinit var tokenManager: TokenManager\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        val data = cacheManager.getPass()\r\n        val savedUser = Paper.book().read<DataX>(\"user\")\r\n//        val token = tokenManager.getToken()\r\n\r\n        with(binding) {\r\n\r\n            materialCardView8.setOnClickListener {\r\n                findNavController().navigate(R.id.action_berandaFragment_to_sallaryFragment)\r\n            }\r\n\r\n            materialCardView5.setOnClickListener {\r\n                findNavController().navigate(R.id.action_berandaFragment_to_menuPerizinanFragment)\r\n            }\r\n\r\n            materialCardView9.setOnClickListener {\r\n                findNavController().navigate(R.id.action_berandaFragment_to_reimbursementFragment)\r\n            }\r\n\r\n            materialCardView6.setOnClickListener {\r\n                findNavController().navigate(R.id.action_berandaFragment_to_lemburFragment)\r\n            }\r\n\r\n            materialCardView7.setOnClickListener {\r\n                findNavController().navigate(R.id.action_berandaFragment_to_shiftFragment)\r\n            }\r\n\r\n            constraint.setOnClickListener {\r\n                findNavController().navigate(R.id.action_berandaFragment_to_allMenuFragment)\r\n            }\r\n\r\n            loading.isVisible = false\r\n\r\n            val customAnalogClock = binding.customAnalogClock\r\n            // Set waktu pada custom analog clock\r\n            val calendar = Calendar.getInstance()\r\n            customAnalogClock.setTime(\r\n                calendar.get(Calendar.HOUR_OF_DAY),\r\n                calendar.get(Calendar.MINUTE),\r\n                calendar.get(Calendar.SECOND)\r\n            )\r\n\r\n            // Update waktu setiap detik\r\n            val timer = Timer()\r\n            timer.scheduleAtFixedRate(object : TimerTask() {\r\n                override fun run() {\r\n                    activity?.runOnUiThread {\r\n                        val calendar = Calendar.getInstance()\r\n                        customAnalogClock.setTime(\r\n                            calendar.get(Calendar.HOUR_OF_DAY),\r\n                            calendar.get(Calendar.MINUTE),\r\n                            calendar.get(Calendar.SECOND)\r\n                        )\r\n                    }\r\n                }\r\n            }, 0, 1000)\r\n\r\n            runnable = object : Runnable {\r\n                override fun run() {\r\n                    val timestamp = System.currentTimeMillis()\r\n\r\n                    // Create a SimpleDateFormat object with the system timezone\r\n                    val sdfJam = SimpleDateFormat(\"HH\", Locale.getDefault())\r\n                    val sdfMenit = SimpleDateFormat(\"mm\", Locale.getDefault())\r\n                    val sdfDetik = SimpleDateFormat(\"ss\", Locale.getDefault())\r\n                    sdfJam.timeZone = TimeZone.getDefault()\r\n                    sdfMenit.timeZone = TimeZone.getDefault()\r\n                    sdfDetik.timeZone = TimeZone.getDefault()\r\n                    handler.postDelayed(this, 1000)\r\n                }\r\n            }\r\n\r\n            materialCardView9.setOnClickListener {\r\n                findNavController().navigate(R.id.action_berandaFragment_to_reimbursementFragment)\r\n            }\r\n        }\r\n        viewModel.homeRequest(savedUser!!.nip)\r\n        viewModel.homeLiveData.observe(viewLifecycleOwner) {\r\n            binding.loading.isVisible = true\r\n            when (it) {\r\n                is NetworkResult.Success -> {\r\n                    binding.loading.isVisible = false\r\n                    binding.homeVisible.isVisible = true\r\n                    binding.materialCardView11.isVisible = true\r\n                    binding.apply {\r\n                        val dataHome = it.data!!.data\r\n                        textView6.text = dataHome.nama\r\n                        textView6.invalidate()\r\n                        textView6.requestLayout()\r\n                        textView7.text = dataHome.jabatan\r\n                        Glide.with(requireContext())\r\n                            .load(IMAGE_URL + dataHome.foto)\r\n                            .into(imageView3)\r\n\r\n                        textView8.text = dataHome.nama_shift\r\n                        textView9.text = dataHome.jam_shift\r\n                        if (Build.VERSION.SDK_INT < 26) {\r\n                            day.text = HelperApiUnder().getDayApi23()\r\n                            textView10.text = HelperApiUnder().getDate()\r\n                            textView11.text = HelperApiUnder().getMY()\r\n                        } else {\r\n                            day.text = Helper().getDay()\r\n                            textView10.text = Helper().getDate()\r\n                            textView11.text = Helper().getMY()\r\n                        }\r\n\r\n                        imageView3.setOnClickListener {\r\n                            findNavController().navigate(R.id.action_berandaFragment_to_profileFragment)\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                    val status = it.data!!.status\r\n                    if (status) {\r\n                        Log.d(\"hi\", \"hi\")\r\n                    } else {\r\n                        handleApiError(it.message)\r\n                    }\r\n                }\r\n                is NetworkResult.Error -> {\r\n                    binding.loading.isVisible = false\r\n                    handleApiError(it.message)\r\n                }\r\n\r\n                is NetworkResult.Loading -> {\r\n                    binding.loading.isVisible = true\r\n                    binding.homeVisible.isVisible = false\r\n                    binding.materialCardView11.isVisible = false\r\n                }\r\n\r\n                else -> Log.d(\"else\", \"else\")\r\n\r\n            }\r\n        }\r\n\r\n        val callback = object : OnBackPressedCallback(true) {\r\n            override fun handleOnBackPressed() {\r\n                // Navigasi kembali ke halaman sebelumnya jika tidak berada di halaman awal (DefaultFragment)\r\n                val navController = findNavController()\r\n                if (navController.currentDestination?.id == R.id.berandaFragment) {\r\n//                    activity?.finish()\r\n                    showExitConfirmationDialog()\r\n                } else {\r\n                    navController.navigateUp()\r\n                }\r\n            }\r\n        }\r\n        requireActivity().onBackPressedDispatcher.addCallback(viewLifecycleOwner, callback)\r\n    }\r\n\r\n    fun showExitConfirmationDialog(){\r\n        val builder = AlertDialog.Builder(requireContext())\r\n        builder.setTitle(\"Konfirmasi\")\r\n        builder.setMessage(\"Apakah Anda yakin ingin keluar dari aplikasi?\")\r\n        builder.setPositiveButton(\"Ya\") { _, _ ->\r\n            activity?.finish()\r\n        }\r\n\r\n        builder.setNegativeButton(\"Tidak\") { dialog, _ ->\r\n            dialog.dismiss()\r\n        }\r\n\r\n        val dialog = builder.create()\r\n        dialog.show()\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/dsmabsen/ui/fragment/BerandaFragment.kt b/app/src/main/java/com/example/dsmabsen/ui/fragment/BerandaFragment.kt
--- a/app/src/main/java/com/example/dsmabsen/ui/fragment/BerandaFragment.kt	(revision 2540969f378d7dbbb177fba3f13add7206e61649)
+++ b/app/src/main/java/com/example/dsmabsen/ui/fragment/BerandaFragment.kt	(date 1678545179531)
@@ -8,6 +8,7 @@
 import android.widget.TextView
 import android.widget.Toast
 import androidx.activity.OnBackPressedCallback
+import androidx.annotation.RequiresApi
 import androidx.appcompat.app.AlertDialog
 import androidx.core.view.isVisible
 import androidx.fragment.app.viewModels
@@ -41,6 +42,7 @@
     @Inject
     lateinit var tokenManager: TokenManager
 
+    @RequiresApi(Build.VERSION_CODES.O)
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
 
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 2540969f378d7dbbb177fba3f13add7206e61649)
+++ /dev/null	(revision 2540969f378d7dbbb177fba3f13add7206e61649)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 2540969f378d7dbbb177fba3f13add7206e61649)
+++ b/.idea/misc.xml	(date 1678545179551)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 2540969f378d7dbbb177fba3f13add7206e61649)
+++ b/.idea/vcs.xml	(date 1678545179558)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 2540969f378d7dbbb177fba3f13add7206e61649)
+++ b/.idea/gradle.xml	(date 1678545179567)
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
